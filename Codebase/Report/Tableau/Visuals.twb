<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-duration' value='2' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Consolidated_CostReport' inline='true' name='federated.17ukixd15my0ah10eocky1pllr9x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Consolidated_CostReport' name='textscan.086b81a0hobm6w130dmrt0zth66w'>
            <connection class='textscan' directory='C:/Users/joshu/OneDrive/Desktop Files/Textbooks and Syllabi/CSUN Semester 6/BANA 620/Project/Data' filename='Consolidated_CostReport.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.086b81a0hobm6w130dmrt0zth66w' name='Consolidated_CostReport.csv' table='[Consolidated_CostReport#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='rpt_rec_num' ordinal='0' />
            <column datatype='integer' name='Provider_CCN' ordinal='1' />
            <column datatype='string' name='Facility_Name' ordinal='2' />
            <column datatype='string' name='Street_Address' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='State_Code' ordinal='5' />
            <column datatype='string' name='Zip_Code' ordinal='6' />
            <column datatype='string' name='County' ordinal='7' />
            <column datatype='real' name='Medicare_CBSA_Number' ordinal='8' />
            <column datatype='string' name='Rural_versus_Urban' ordinal='9' />
            <column datatype='date' name='Fiscal_Year_Begin_Date' ordinal='10' />
            <column datatype='date' name='Fiscal_Year_End_Date' ordinal='11' />
            <column datatype='real' name='Type_of_Control' ordinal='12' />
            <column datatype='real' name='Accounts_Receivable' ordinal='13' />
            <column datatype='real' name='Accounts_payable' ordinal='14' />
            <column datatype='real' name='Buildings' ordinal='15' />
            <column datatype='real' name='Cash_on_hand_and_in_banks' ordinal='16' />
            <column datatype='real' name='General_fund_balance' ordinal='17' />
            <column datatype='real' name='Gross_Revenue' ordinal='18' />
            <column datatype='real' name='Inpatient_PPS_Amount' ordinal='19' />
            <column datatype='real' name='Inpatient_Revenue' ordinal='20' />
            <column datatype='real' name='Less_Total_Operating_Expense' ordinal='21' />
            <column datatype='real' name='Less_discounts_on_patients' ordinal='22' />
            <column datatype='real' name='Major_movable_equipment' ordinal='23' />
            <column datatype='real' name='Net_Income' ordinal='24' />
            <column datatype='real' name='Net_Income_from_patients' ordinal='25' />
            <column datatype='real' name='Net_Patient_Revenue' ordinal='26' />
            <column datatype='real' name='Number_of_Beds' ordinal='27' />
            <column datatype='real' name='Other_Assets' ordinal='28' />
            <column datatype='real' name='Other_current_liabilities' ordinal='29' />
            <column datatype='real' name='Overhead_Non_Salary_Costs' ordinal='30' />
            <column datatype='real' name='SNF_Admissions_Other' ordinal='31' />
            <column datatype='real' name='SNF_Admissions_Title_XIX' ordinal='32' />
            <column datatype='real' name='SNF_Admissions_Title_XVIII' ordinal='33' />
            <column datatype='real' name='SNF_Admissions_Total' ordinal='34' />
            <column datatype='real' name='SNF_Average_Length_of_stay_Tot' ordinal='35' />
            <column datatype='real' name='SNF_Average_Length_stay_XIX' ordinal='36' />
            <column datatype='real' name='SNF_Average_Length_stay_XVIII' ordinal='37' />
            <column datatype='real' name='SNF_Days_Other' ordinal='38' />
            <column datatype='real' name='SNF_Days_Title_XIX' ordinal='39' />
            <column datatype='real' name='SNF_Days_Title_XVIII' ordinal='40' />
            <column datatype='real' name='SNF_Days_Total' ordinal='41' />
            <column datatype='real' name='SNF_Discharges_Title_Other' ordinal='42' />
            <column datatype='real' name='SNF_Discharges_Title_XIX' ordinal='43' />
            <column datatype='real' name='SNF_Discharges_Title_XVIII' ordinal='44' />
            <column datatype='real' name='SNF_Discharges_Total' ordinal='45' />
            <column datatype='real' name='SNF_Number_of_beds' ordinal='46' />
            <column datatype='real' name='SNF_bed_Days_Available' ordinal='47' />
            <column datatype='real' name='Salaries_wages_and_fees_payable' ordinal='48' />
            <column datatype='real' name='Total_Assets' ordinal='49' />
            <column datatype='real' name='Total_Bed_Days_Available' ordinal='50' />
            <column datatype='real' name='Total_Costs' ordinal='51' />
            <column datatype='real' name='Total_Days_Other' ordinal='52' />
            <column datatype='real' name='Total_Days_Title_XIX' ordinal='53' />
            <column datatype='real' name='Total_Days_Title_XVIII' ordinal='54' />
            <column datatype='real' name='Total_Days_Total' ordinal='55' />
            <column datatype='real' name='Total_Discharges_Title_Other' ordinal='56' />
            <column datatype='real' name='Total_Discharges_Title_XIX' ordinal='57' />
            <column datatype='real' name='Total_Discharges_Title_XVIII' ordinal='58' />
            <column datatype='real' name='Total_Discharges_Total' ordinal='59' />
            <column datatype='real' name='Total_General_Inpatient_Revenue' ordinal='60' />
            <column datatype='real' name='Total_Income' ordinal='61' />
            <column datatype='real' name='Total_Liab_and_fund_balances' ordinal='62' />
            <column datatype='real' name='Total_RUG_Days' ordinal='63' />
            <column datatype='real' name='Total_Salaries_From_Worksheet_A' ordinal='64' />
            <column datatype='real' name='Total_Salaries_adjusted' ordinal='65' />
            <column datatype='real' name='Total_current_assets' ordinal='66' />
            <column datatype='real' name='Total_current_liabilities' ordinal='67' />
            <column datatype='real' name='Total_fixed_Assets' ordinal='68' />
            <column datatype='real' name='Total_fund_balances' ordinal='69' />
            <column datatype='real' name='Total_liabilities' ordinal='70' />
            <column datatype='real' name='Total_other_Assets' ordinal='71' />
            <column datatype='real' name='Wage_related_Costs_core' ordinal='72' />
            <column datatype='real' name='Fixed_equipment' ordinal='73' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='74' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.086b81a0hobm6w130dmrt0zth66w' name='Consolidated_CostReport.csv' table='[Consolidated_CostReport#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='rpt_rec_num' ordinal='0' />
            <column datatype='integer' name='Provider_CCN' ordinal='1' />
            <column datatype='string' name='Facility_Name' ordinal='2' />
            <column datatype='string' name='Street_Address' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='State_Code' ordinal='5' />
            <column datatype='string' name='Zip_Code' ordinal='6' />
            <column datatype='string' name='County' ordinal='7' />
            <column datatype='real' name='Medicare_CBSA_Number' ordinal='8' />
            <column datatype='string' name='Rural_versus_Urban' ordinal='9' />
            <column datatype='date' name='Fiscal_Year_Begin_Date' ordinal='10' />
            <column datatype='date' name='Fiscal_Year_End_Date' ordinal='11' />
            <column datatype='real' name='Type_of_Control' ordinal='12' />
            <column datatype='real' name='Accounts_Receivable' ordinal='13' />
            <column datatype='real' name='Accounts_payable' ordinal='14' />
            <column datatype='real' name='Buildings' ordinal='15' />
            <column datatype='real' name='Cash_on_hand_and_in_banks' ordinal='16' />
            <column datatype='real' name='General_fund_balance' ordinal='17' />
            <column datatype='real' name='Gross_Revenue' ordinal='18' />
            <column datatype='real' name='Inpatient_PPS_Amount' ordinal='19' />
            <column datatype='real' name='Inpatient_Revenue' ordinal='20' />
            <column datatype='real' name='Less_Total_Operating_Expense' ordinal='21' />
            <column datatype='real' name='Less_discounts_on_patients' ordinal='22' />
            <column datatype='real' name='Major_movable_equipment' ordinal='23' />
            <column datatype='real' name='Net_Income' ordinal='24' />
            <column datatype='real' name='Net_Income_from_patients' ordinal='25' />
            <column datatype='real' name='Net_Patient_Revenue' ordinal='26' />
            <column datatype='real' name='Number_of_Beds' ordinal='27' />
            <column datatype='real' name='Other_Assets' ordinal='28' />
            <column datatype='real' name='Other_current_liabilities' ordinal='29' />
            <column datatype='real' name='Overhead_Non_Salary_Costs' ordinal='30' />
            <column datatype='real' name='SNF_Admissions_Other' ordinal='31' />
            <column datatype='real' name='SNF_Admissions_Title_XIX' ordinal='32' />
            <column datatype='real' name='SNF_Admissions_Title_XVIII' ordinal='33' />
            <column datatype='real' name='SNF_Admissions_Total' ordinal='34' />
            <column datatype='real' name='SNF_Average_Length_of_stay_Tot' ordinal='35' />
            <column datatype='real' name='SNF_Average_Length_stay_XIX' ordinal='36' />
            <column datatype='real' name='SNF_Average_Length_stay_XVIII' ordinal='37' />
            <column datatype='real' name='SNF_Days_Other' ordinal='38' />
            <column datatype='real' name='SNF_Days_Title_XIX' ordinal='39' />
            <column datatype='real' name='SNF_Days_Title_XVIII' ordinal='40' />
            <column datatype='real' name='SNF_Days_Total' ordinal='41' />
            <column datatype='real' name='SNF_Discharges_Title_Other' ordinal='42' />
            <column datatype='real' name='SNF_Discharges_Title_XIX' ordinal='43' />
            <column datatype='real' name='SNF_Discharges_Title_XVIII' ordinal='44' />
            <column datatype='real' name='SNF_Discharges_Total' ordinal='45' />
            <column datatype='real' name='SNF_Number_of_beds' ordinal='46' />
            <column datatype='real' name='SNF_bed_Days_Available' ordinal='47' />
            <column datatype='real' name='Salaries_wages_and_fees_payable' ordinal='48' />
            <column datatype='real' name='Total_Assets' ordinal='49' />
            <column datatype='real' name='Total_Bed_Days_Available' ordinal='50' />
            <column datatype='real' name='Total_Costs' ordinal='51' />
            <column datatype='real' name='Total_Days_Other' ordinal='52' />
            <column datatype='real' name='Total_Days_Title_XIX' ordinal='53' />
            <column datatype='real' name='Total_Days_Title_XVIII' ordinal='54' />
            <column datatype='real' name='Total_Days_Total' ordinal='55' />
            <column datatype='real' name='Total_Discharges_Title_Other' ordinal='56' />
            <column datatype='real' name='Total_Discharges_Title_XIX' ordinal='57' />
            <column datatype='real' name='Total_Discharges_Title_XVIII' ordinal='58' />
            <column datatype='real' name='Total_Discharges_Total' ordinal='59' />
            <column datatype='real' name='Total_General_Inpatient_Revenue' ordinal='60' />
            <column datatype='real' name='Total_Income' ordinal='61' />
            <column datatype='real' name='Total_Liab_and_fund_balances' ordinal='62' />
            <column datatype='real' name='Total_RUG_Days' ordinal='63' />
            <column datatype='real' name='Total_Salaries_From_Worksheet_A' ordinal='64' />
            <column datatype='real' name='Total_Salaries_adjusted' ordinal='65' />
            <column datatype='real' name='Total_current_assets' ordinal='66' />
            <column datatype='real' name='Total_current_liabilities' ordinal='67' />
            <column datatype='real' name='Total_fixed_Assets' ordinal='68' />
            <column datatype='real' name='Total_fund_balances' ordinal='69' />
            <column datatype='real' name='Total_liabilities' ordinal='70' />
            <column datatype='real' name='Total_other_Assets' ordinal='71' />
            <column datatype='real' name='Wage_related_Costs_core' ordinal='72' />
            <column datatype='real' name='Fixed_equipment' ordinal='73' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='74' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rpt_rec_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rpt_rec_num]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>rpt_rec_num</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider_CCN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Provider_CCN]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Provider_CCN</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facility_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Facility_Name]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Facility_Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street_Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street_Address]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Street_Address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State_Code]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>State_Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Zip_Code]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Zip_Code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicare_CBSA_Number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Medicare_CBSA_Number]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Medicare_CBSA_Number</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural_versus_Urban</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rural_versus_Urban]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Rural_versus_Urban</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal_Year_Begin_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Fiscal_Year_Begin_Date]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Fiscal_Year_Begin_Date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal_Year_End_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Fiscal_Year_End_Date]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Fiscal_Year_End_Date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type_of_Control</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Type_of_Control]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Type_of_Control</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accounts_Receivable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Accounts_Receivable]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Accounts_Receivable</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accounts_payable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Accounts_payable]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Accounts_payable</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buildings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Buildings]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Buildings</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cash_on_hand_and_in_banks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cash_on_hand_and_in_banks]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Cash_on_hand_and_in_banks</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>General_fund_balance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[General_fund_balance]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>General_fund_balance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross_Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross_Revenue]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Gross_Revenue</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inpatient_PPS_Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inpatient_PPS_Amount]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Inpatient_PPS_Amount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inpatient_Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inpatient_Revenue]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Inpatient_Revenue</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Less_Total_Operating_Expense</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Less_Total_Operating_Expense]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Less_Total_Operating_Expense</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Less_discounts_on_patients</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Less_discounts_on_patients]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Less_discounts_on_patients</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major_movable_equipment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Major_movable_equipment]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Major_movable_equipment</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net_Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net_Income]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Net_Income</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net_Income_from_patients</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net_Income_from_patients]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Net_Income_from_patients</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net_Patient_Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net_Patient_Revenue]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Net_Patient_Revenue</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_of_Beds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number_of_Beds]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Number_of_Beds</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other_Assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other_Assets]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Other_Assets</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other_current_liabilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other_current_liabilities]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Other_current_liabilities</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overhead_Non_Salary_Costs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overhead_Non_Salary_Costs]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Overhead_Non_Salary_Costs</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Admissions_Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Admissions_Other]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Admissions_Other</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Admissions_Title_XIX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Admissions_Title_XIX]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Admissions_Title_XIX</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Admissions_Title_XVIII</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Admissions_Title_XVIII]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Admissions_Title_XVIII</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Admissions_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Admissions_Total]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Admissions_Total</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Average_Length_of_stay_Tot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Average_Length_of_stay_Tot]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Average_Length_of_stay_Tot</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Average_Length_stay_XIX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Average_Length_stay_XIX]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Average_Length_stay_XIX</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Average_Length_stay_XVIII</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Average_Length_stay_XVIII]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Average_Length_stay_XVIII</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Days_Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Days_Other]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Days_Other</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Days_Title_XIX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Days_Title_XIX]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Days_Title_XIX</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Days_Title_XVIII</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Days_Title_XVIII]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Days_Title_XVIII</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Days_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Days_Total]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Days_Total</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Discharges_Title_Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Discharges_Title_Other]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Discharges_Title_Other</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Discharges_Title_XIX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Discharges_Title_XIX]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Discharges_Title_XIX</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Discharges_Title_XVIII</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Discharges_Title_XVIII]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Discharges_Title_XVIII</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Discharges_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Discharges_Total]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Discharges_Total</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_Number_of_beds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_Number_of_beds]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_Number_of_beds</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNF_bed_Days_Available</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNF_bed_Days_Available]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>SNF_bed_Days_Available</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salaries_wages_and_fees_payable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Salaries_wages_and_fees_payable]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Salaries_wages_and_fees_payable</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Assets]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Assets</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Bed_Days_Available</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Bed_Days_Available]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Bed_Days_Available</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Costs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Costs]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Costs</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Days_Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Days_Other]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Days_Other</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Days_Title_XIX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Days_Title_XIX]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Days_Title_XIX</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Days_Title_XVIII</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Days_Title_XVIII]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Days_Title_XVIII</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Days_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Days_Total]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Days_Total</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Discharges_Title_Other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Discharges_Title_Other]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Discharges_Title_Other</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Discharges_Title_XIX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Discharges_Title_XIX]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Discharges_Title_XIX</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Discharges_Title_XVIII</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Discharges_Title_XVIII]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Discharges_Title_XVIII</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Discharges_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Discharges_Total]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Discharges_Total</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_General_Inpatient_Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_General_Inpatient_Revenue]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_General_Inpatient_Revenue</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Income]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Income</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Liab_and_fund_balances</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Liab_and_fund_balances]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Liab_and_fund_balances</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_RUG_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_RUG_Days]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_RUG_Days</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Salaries_From_Worksheet_A</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Salaries_From_Worksheet_A]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Salaries_From_Worksheet_A</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Salaries_adjusted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Salaries_adjusted]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_Salaries_adjusted</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_current_assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_current_assets]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_current_assets</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_current_liabilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_current_liabilities]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_current_liabilities</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_fixed_Assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_fixed_Assets]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_fixed_Assets</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_fund_balances</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_fund_balances]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_fund_balances</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_liabilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_liabilities]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_liabilities</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_other_Assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_other_Assets]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Total_other_Assets</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage_related_Costs_core</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wage_related_Costs_core]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Wage_related_Costs_core</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fixed_equipment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fixed_equipment]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Fixed_equipment</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Consolidated_CostReport.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>74</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Accounts Receivable' datatype='real' name='[Accounts_Receivable]' role='measure' type='quantitative' />
      <column caption='Accounts payable' datatype='real' name='[Accounts_payable]' role='measure' type='quantitative' />
      <column datatype='real' name='[Buildings]' role='measure' type='quantitative' />
      <column caption='Rank' datatype='integer' name='[Calculation_1163336140251291648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Net_Income]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cost per Resident Day' datatype='real' name='[Calculation_1542482887165329408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total_Costs] / [Total_Days_Total]' />
      </column>
      <column caption='Revenue per Resident Day' datatype='real' name='[Calculation_1542482887166238721]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Gross_Revenue] / [Total_Days_Total]' />
      </column>
      <column caption='Cost per bed' datatype='real' name='[Calculation_1542482887168385026]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total_Costs] / [Number_of_Beds]' />
      </column>
      <column caption='Gross Profit Margin' datatype='real' name='[Calculation_1542482887170662403]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Gross_Revenue] - [Total_Costs]) / [Gross_Revenue]' />
      </column>
      <column caption='Net Profit Margin' datatype='real' name='[Calculation_1829024414075887616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Net_Income] / [Gross_Revenue]' />
      </column>
      <column caption='Operating Exepnse Per Resident Day' datatype='real' name='[Calculation_1829024414087995393]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Less_Total_Operating_Expense] / [Total_Days_Total]' />
      </column>
      <column caption='Cash on hand and in banks' datatype='real' name='[Cash_on_hand_and_in_banks]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Facility Name' datatype='string' name='[Facility_Name]' role='dimension' type='nominal' />
      <column caption='Fiscal Year Begin Date' datatype='date' name='[Fiscal_Year_Begin_Date]' role='dimension' type='ordinal' />
      <column caption='Fiscal Year End Date' datatype='date' name='[Fiscal_Year_End_Date]' role='dimension' type='ordinal' />
      <column caption='Fixed equipment' datatype='real' name='[Fixed_equipment]' role='measure' type='quantitative' />
      <column caption='General fund balance' datatype='real' name='[General_fund_balance]' role='measure' type='quantitative' />
      <column caption='Gross Revenue' datatype='real' name='[Gross_Revenue]' role='measure' type='quantitative' />
      <column caption='Inpatient PPS Amount' datatype='real' name='[Inpatient_PPS_Amount]' role='measure' type='quantitative' />
      <column caption='Inpatient Revenue' datatype='real' name='[Inpatient_Revenue]' role='measure' type='quantitative' />
      <column caption='Less Total Operating Expense' datatype='real' name='[Less_Total_Operating_Expense]' role='measure' type='quantitative' />
      <column caption='Less discounts on patients' datatype='real' name='[Less_discounts_on_patients]' role='measure' type='quantitative' />
      <column caption='Major movable equipment' datatype='real' name='[Major_movable_equipment]' role='measure' type='quantitative' />
      <column caption='Medicare CBSA Number' datatype='real' name='[Medicare_CBSA_Number]' role='dimension' type='ordinal' />
      <column caption='Net Income' datatype='real' name='[Net_Income]' role='measure' type='quantitative' />
      <column caption='Net Income from patients' datatype='real' name='[Net_Income_from_patients]' role='measure' type='quantitative' />
      <column caption='Net Patient Revenue' datatype='real' name='[Net_Patient_Revenue]' role='measure' type='quantitative' />
      <column caption='Number of Beds' datatype='real' name='[Number_of_Beds]' role='measure' type='quantitative' />
      <column caption='Other Assets' datatype='real' name='[Other_Assets]' role='measure' type='quantitative' />
      <column caption='Other current liabilities' datatype='real' name='[Other_current_liabilities]' role='measure' type='quantitative' />
      <column caption='Overhead Non Salary Costs' datatype='real' name='[Overhead_Non_Salary_Costs]' role='measure' type='quantitative' />
      <column caption='Provider CCN' datatype='integer' name='[Provider_CCN]' role='measure' type='quantitative' />
      <column caption='Rural versus Urban' datatype='string' name='[Rural_versus_Urban]' role='dimension' type='nominal' />
      <column caption='SNF Admissions Other' datatype='real' name='[SNF_Admissions_Other]' role='measure' type='quantitative' />
      <column caption='SNF Admissions Title XIX' datatype='real' name='[SNF_Admissions_Title_XIX]' role='measure' type='quantitative' />
      <column caption='SNF Admissions Title XVIII' datatype='real' name='[SNF_Admissions_Title_XVIII]' role='measure' type='quantitative' />
      <column caption='SNF Admissions Total' datatype='real' name='[SNF_Admissions_Total]' role='measure' type='quantitative' />
      <column caption='SNF Average Length of stay Tot' datatype='real' name='[SNF_Average_Length_of_stay_Tot]' role='measure' type='quantitative' />
      <column caption='SNF Average Length stay XIX' datatype='real' name='[SNF_Average_Length_stay_XIX]' role='measure' type='quantitative' />
      <column caption='SNF Average Length stay XVIII' datatype='real' name='[SNF_Average_Length_stay_XVIII]' role='measure' type='quantitative' />
      <column caption='SNF Days Other' datatype='real' name='[SNF_Days_Other]' role='measure' type='quantitative' />
      <column caption='SNF Days Title XIX' datatype='real' name='[SNF_Days_Title_XIX]' role='measure' type='quantitative' />
      <column caption='SNF Days Title XVIII' datatype='real' name='[SNF_Days_Title_XVIII]' role='measure' type='quantitative' />
      <column caption='SNF Days Total' datatype='real' name='[SNF_Days_Total]' role='measure' type='quantitative' />
      <column caption='SNF Discharges Title Other' datatype='real' name='[SNF_Discharges_Title_Other]' role='measure' type='quantitative' />
      <column caption='SNF Discharges Title XIX' datatype='real' name='[SNF_Discharges_Title_XIX]' role='measure' type='quantitative' />
      <column caption='SNF Discharges Title XVIII' datatype='real' name='[SNF_Discharges_Title_XVIII]' role='measure' type='quantitative' />
      <column caption='SNF Discharges Total' datatype='real' name='[SNF_Discharges_Total]' role='measure' type='quantitative' />
      <column caption='SNF Number of beds' datatype='real' name='[SNF_Number_of_beds]' role='measure' type='quantitative' />
      <column caption='SNF bed Days Available' datatype='real' name='[SNF_bed_Days_Available]' role='measure' type='quantitative' />
      <column caption='Salaries wages and fees payable' datatype='real' name='[Salaries_wages_and_fees_payable]' role='measure' type='quantitative' />
      <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Street Address' datatype='string' name='[Street_Address]' role='dimension' type='nominal' />
      <column caption='Total Assets' datatype='real' name='[Total_Assets]' role='measure' type='quantitative' />
      <column caption='Total Bed Days Available' datatype='real' name='[Total_Bed_Days_Available]' role='measure' type='quantitative' />
      <column caption='Total Costs' datatype='real' name='[Total_Costs]' role='measure' type='quantitative' />
      <column caption='Total Days Other' datatype='real' name='[Total_Days_Other]' role='measure' type='quantitative' />
      <column caption='Total Days Title XIX' datatype='real' name='[Total_Days_Title_XIX]' role='measure' type='quantitative' />
      <column caption='Total Days Title XVIII' datatype='real' name='[Total_Days_Title_XVIII]' role='measure' type='quantitative' />
      <column caption='Total Days Total' datatype='real' name='[Total_Days_Total]' role='measure' type='quantitative' />
      <column caption='Total Discharges Title Other' datatype='real' name='[Total_Discharges_Title_Other]' role='measure' type='quantitative' />
      <column caption='Total Discharges Title XIX' datatype='real' name='[Total_Discharges_Title_XIX]' role='measure' type='quantitative' />
      <column caption='Total Discharges Title XVIII' datatype='real' name='[Total_Discharges_Title_XVIII]' role='measure' type='quantitative' />
      <column caption='Total Discharges Total' datatype='real' name='[Total_Discharges_Total]' role='measure' type='quantitative' />
      <column caption='Total General Inpatient Revenue' datatype='real' name='[Total_General_Inpatient_Revenue]' role='measure' type='quantitative' />
      <column caption='Total Income' datatype='real' name='[Total_Income]' role='measure' type='quantitative' />
      <column caption='Total Liab and fund balances' datatype='real' name='[Total_Liab_and_fund_balances]' role='measure' type='quantitative' />
      <column caption='Total RUG Days' datatype='real' name='[Total_RUG_Days]' role='measure' type='quantitative' />
      <column caption='Total Salaries From Worksheet A' datatype='real' name='[Total_Salaries_From_Worksheet_A]' role='measure' type='quantitative' />
      <column caption='Total Salaries adjusted' datatype='real' name='[Total_Salaries_adjusted]' role='measure' type='quantitative' />
      <column caption='Total current assets' datatype='real' name='[Total_current_assets]' role='measure' type='quantitative' />
      <column caption='Total current liabilities' datatype='real' name='[Total_current_liabilities]' role='measure' type='quantitative' />
      <column caption='Total fixed Assets' datatype='real' name='[Total_fixed_Assets]' role='measure' type='quantitative' />
      <column caption='Total fund balances' datatype='real' name='[Total_fund_balances]' role='measure' type='quantitative' />
      <column caption='Total liabilities' datatype='real' name='[Total_liabilities]' role='measure' type='quantitative' />
      <column caption='Total other Assets' datatype='real' name='[Total_other_Assets]' role='measure' type='quantitative' />
      <column caption='Type of Control' datatype='real' name='[Type_of_Control]' role='measure' type='quantitative' />
      <column caption='Wage related Costs core' datatype='real' name='[Wage_related_Costs_core]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
      <column caption='Zip Code' datatype='string' name='[Zip_Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Consolidated_CostReport.csv' datatype='table' name='[__tableau_internal_object_id__].[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]' role='measure' type='quantitative' />
      <column caption='Rpt Rec Num' datatype='integer' name='[rpt_rec_num]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887165329408]' derivation='Avg' name='[avg:Calculation_1542482887165329408:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887166238721]' derivation='Avg' name='[avg:Calculation_1542482887166238721:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887168385026]' derivation='Avg' name='[avg:Calculation_1542482887168385026:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887170662403]' derivation='Avg' name='[avg:Calculation_1542482887170662403:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cash_on_hand_and_in_banks]' derivation='Avg' name='[avg:Cash_on_hand_and_in_banks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inpatient_PPS_Amount]' derivation='Avg' name='[avg:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Less_Total_Operating_Expense]' derivation='Avg' name='[avg:Less_Total_Operating_Expense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net_Income]' derivation='Avg' name='[avg:Net_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overhead_Non_Salary_Costs]' derivation='Avg' name='[avg:Overhead_Non_Salary_Costs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Assets]' derivation='Avg' name='[avg:Total_Assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Days_Total]' derivation='Avg' name='[avg:Total_Days_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inpatient_PPS_Amount]' derivation='Count' name='[cnt:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887165329408]' derivation='Median' name='[med:Calculation_1542482887165329408:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887166238721]' derivation='Median' name='[med:Calculation_1542482887166238721:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887168385026]' derivation='Median' name='[med:Calculation_1542482887168385026:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cash_on_hand_and_in_banks]' derivation='Median' name='[med:Cash_on_hand_and_in_banks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inpatient_PPS_Amount]' derivation='Median' name='[med:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net_Income]' derivation='Median' name='[med:Net_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Days_Total]' derivation='Median' name='[med:Total_Days_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Zip_Code]' derivation='None' name='[none:Zip_Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Inpatient_PPS_Amount]' derivation='Stdev' name='[std:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Accounts_Receivable]' derivation='Sum' name='[sum:Accounts_Receivable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Accounts_payable]' derivation='Sum' name='[sum:Accounts_payable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Buildings]' derivation='Sum' name='[sum:Buildings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887165329408]' derivation='Sum' name='[sum:Calculation_1542482887165329408:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887166238721]' derivation='Sum' name='[sum:Calculation_1542482887166238721:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887168385026]' derivation='Sum' name='[sum:Calculation_1542482887168385026:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1542482887170662403]' derivation='Sum' name='[sum:Calculation_1542482887170662403:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cash_on_hand_and_in_banks]' derivation='Sum' name='[sum:Cash_on_hand_and_in_banks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fixed_equipment]' derivation='Sum' name='[sum:Fixed_equipment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[General_fund_balance]' derivation='Sum' name='[sum:General_fund_balance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross_Revenue]' derivation='Sum' name='[sum:Gross_Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inpatient_PPS_Amount]' derivation='Sum' name='[sum:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inpatient_Revenue]' derivation='Sum' name='[sum:Inpatient_Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Less_Total_Operating_Expense]' derivation='Sum' name='[sum:Less_Total_Operating_Expense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Less_discounts_on_patients]' derivation='Sum' name='[sum:Less_discounts_on_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Major_movable_equipment]' derivation='Sum' name='[sum:Major_movable_equipment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net_Income]' derivation='Sum' name='[sum:Net_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net_Income_from_patients]' derivation='Sum' name='[sum:Net_Income_from_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net_Patient_Revenue]' derivation='Sum' name='[sum:Net_Patient_Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number_of_Beds]' derivation='Sum' name='[sum:Number_of_Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other_Assets]' derivation='Sum' name='[sum:Other_Assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other_current_liabilities]' derivation='Sum' name='[sum:Other_current_liabilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overhead_Non_Salary_Costs]' derivation='Sum' name='[sum:Overhead_Non_Salary_Costs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Provider_CCN]' derivation='Sum' name='[sum:Provider_CCN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Admissions_Other]' derivation='Sum' name='[sum:SNF_Admissions_Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Admissions_Title_XIX]' derivation='Sum' name='[sum:SNF_Admissions_Title_XIX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Admissions_Title_XVIII]' derivation='Sum' name='[sum:SNF_Admissions_Title_XVIII:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Admissions_Total]' derivation='Sum' name='[sum:SNF_Admissions_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Average_Length_of_stay_Tot]' derivation='Sum' name='[sum:SNF_Average_Length_of_stay_Tot:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Average_Length_stay_XIX]' derivation='Sum' name='[sum:SNF_Average_Length_stay_XIX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Average_Length_stay_XVIII]' derivation='Sum' name='[sum:SNF_Average_Length_stay_XVIII:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Days_Other]' derivation='Sum' name='[sum:SNF_Days_Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Days_Title_XIX]' derivation='Sum' name='[sum:SNF_Days_Title_XIX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Days_Title_XVIII]' derivation='Sum' name='[sum:SNF_Days_Title_XVIII:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Days_Total]' derivation='Sum' name='[sum:SNF_Days_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Discharges_Title_Other]' derivation='Sum' name='[sum:SNF_Discharges_Title_Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Discharges_Title_XIX]' derivation='Sum' name='[sum:SNF_Discharges_Title_XIX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Discharges_Title_XVIII]' derivation='Sum' name='[sum:SNF_Discharges_Title_XVIII:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Discharges_Total]' derivation='Sum' name='[sum:SNF_Discharges_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_Number_of_beds]' derivation='Sum' name='[sum:SNF_Number_of_beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SNF_bed_Days_Available]' derivation='Sum' name='[sum:SNF_bed_Days_Available:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Salaries_wages_and_fees_payable]' derivation='Sum' name='[sum:Salaries_wages_and_fees_payable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Assets]' derivation='Sum' name='[sum:Total_Assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Bed_Days_Available]' derivation='Sum' name='[sum:Total_Bed_Days_Available:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Costs]' derivation='Sum' name='[sum:Total_Costs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Days_Other]' derivation='Sum' name='[sum:Total_Days_Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Days_Title_XIX]' derivation='Sum' name='[sum:Total_Days_Title_XIX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Days_Title_XVIII]' derivation='Sum' name='[sum:Total_Days_Title_XVIII:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Days_Total]' derivation='Sum' name='[sum:Total_Days_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Discharges_Title_Other]' derivation='Sum' name='[sum:Total_Discharges_Title_Other:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Discharges_Title_XIX]' derivation='Sum' name='[sum:Total_Discharges_Title_XIX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Discharges_Title_XVIII]' derivation='Sum' name='[sum:Total_Discharges_Title_XVIII:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Discharges_Total]' derivation='Sum' name='[sum:Total_Discharges_Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_General_Inpatient_Revenue]' derivation='Sum' name='[sum:Total_General_Inpatient_Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Income]' derivation='Sum' name='[sum:Total_Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Liab_and_fund_balances]' derivation='Sum' name='[sum:Total_Liab_and_fund_balances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_RUG_Days]' derivation='Sum' name='[sum:Total_RUG_Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Salaries_From_Worksheet_A]' derivation='Sum' name='[sum:Total_Salaries_From_Worksheet_A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Salaries_adjusted]' derivation='Sum' name='[sum:Total_Salaries_adjusted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_current_assets]' derivation='Sum' name='[sum:Total_current_assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_current_liabilities]' derivation='Sum' name='[sum:Total_current_liabilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_fixed_Assets]' derivation='Sum' name='[sum:Total_fixed_Assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_fund_balances]' derivation='Sum' name='[sum:Total_fund_balances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_liabilities]' derivation='Sum' name='[sum:Total_liabilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_other_Assets]' derivation='Sum' name='[sum:Total_other_Assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Type_of_Control]' derivation='Sum' name='[sum:Type_of_Control:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wage_related_Costs_core]' derivation='Sum' name='[sum:Wage_related_Costs_core:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1163336140251291648]' derivation='User' name='[usr:Calculation_1163336140251291648:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Inpatient_PPS_Amount]' derivation='Var' name='[var:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (State Code,YEAR(Year) 2)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State_Code:nk]' />
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State Code,YEAR(Year))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State_Code:nk]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State Code,YEAR(Year),YEAR(Year))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State_Code:nk]' />
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (YEAR(Year),Zip Code)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Year:ok]' />
          <groupfilter function='level-members' level='[none:Zip_Code:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:General_fund_balance:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Admissions_Title_XVIII:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Days_Title_XIX:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Wage_related_Costs_core:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1542482887165329408:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Other_Assets:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Discharges_Total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Salaries_adjusted:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Cash_on_hand_and_in_banks:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Assets:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Cash_on_hand_and_in_banks:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Cash_on_hand_and_in_banks:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Assets:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_fund_balances:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[usr:Calculation_1163336140251291648:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Total_Days_Total:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Days_Total:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Inpatient_PPS_Amount:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[cnt:Inpatient_PPS_Amount:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Inpatient_PPS_Amount:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[std:Inpatient_PPS_Amount:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Inpatient_PPS_Amount:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Average_Length_stay_XVIII:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Discharges_Title_XIX:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[var:Inpatient_PPS_Amount:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Admissions_Total:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Days_Title_XVIII:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Buildings:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Calculation_1542482887166238721:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Bed_Days_Available:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_liabilities:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Net_Income_from_patients:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Discharges_Title_XIX:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_RUG_Days:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Accounts_Receivable:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Other_current_liabilities:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Number_of_beds:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_current_assets:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Major_movable_equipment:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Days_Total:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Income:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[__tableau_internal_object_id__].[cnt:Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Admissions_Other:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Costs:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_other_Assets:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Inpatient_Revenue:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Days_Other:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Discharges_Title_XVIII:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Less_Total_Operating_Expense:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Days_Title_XIX:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Discharges_Total:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Net_Income:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Net_Income:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Discharges_Title_Other:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Liab_and_fund_balances:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Net_Patient_Revenue:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Number_of_Beds:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Discharges_Title_XVIII:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887168385026:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887170662403:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1542482887168385026:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Calculation_1542482887165329408:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Calculation_1542482887168385026:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Calculation_1542482887170662403:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Average_Length_of_stay_Tot:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Salaries_From_Worksheet_A:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Fixed_equipment:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Admissions_Title_XIX:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Days_Other:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Type_of_Control:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1542482887166238721:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Overhead_Non_Salary_Costs:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_bed_Days_Available:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_current_liabilities:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Less_discounts_on_patients:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Days_Title_XVIII:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_General_Inpatient_Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Gross_Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:SNF_Average_Length_stay_XIX:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_Discharges_Title_Other:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Accounts_payable:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Provider_CCN:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Salaries_wages_and_fees_payable:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Total_fixed_Assets:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2020</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2021</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2016</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2017</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2018</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Consolidated_CostReport.csv' id='Consolidated_CostReport.csv_3625B654FEF94510A01BC360D2FC0BAB'>
            <properties context=''>
              <relation connection='textscan.086b81a0hobm6w130dmrt0zth66w' name='Consolidated_CostReport.csv' table='[Consolidated_CostReport#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='rpt_rec_num' ordinal='0' />
                  <column datatype='integer' name='Provider_CCN' ordinal='1' />
                  <column datatype='string' name='Facility_Name' ordinal='2' />
                  <column datatype='string' name='Street_Address' ordinal='3' />
                  <column datatype='string' name='City' ordinal='4' />
                  <column datatype='string' name='State_Code' ordinal='5' />
                  <column datatype='string' name='Zip_Code' ordinal='6' />
                  <column datatype='string' name='County' ordinal='7' />
                  <column datatype='real' name='Medicare_CBSA_Number' ordinal='8' />
                  <column datatype='string' name='Rural_versus_Urban' ordinal='9' />
                  <column datatype='date' name='Fiscal_Year_Begin_Date' ordinal='10' />
                  <column datatype='date' name='Fiscal_Year_End_Date' ordinal='11' />
                  <column datatype='real' name='Type_of_Control' ordinal='12' />
                  <column datatype='real' name='Accounts_Receivable' ordinal='13' />
                  <column datatype='real' name='Accounts_payable' ordinal='14' />
                  <column datatype='real' name='Buildings' ordinal='15' />
                  <column datatype='real' name='Cash_on_hand_and_in_banks' ordinal='16' />
                  <column datatype='real' name='General_fund_balance' ordinal='17' />
                  <column datatype='real' name='Gross_Revenue' ordinal='18' />
                  <column datatype='real' name='Inpatient_PPS_Amount' ordinal='19' />
                  <column datatype='real' name='Inpatient_Revenue' ordinal='20' />
                  <column datatype='real' name='Less_Total_Operating_Expense' ordinal='21' />
                  <column datatype='real' name='Less_discounts_on_patients' ordinal='22' />
                  <column datatype='real' name='Major_movable_equipment' ordinal='23' />
                  <column datatype='real' name='Net_Income' ordinal='24' />
                  <column datatype='real' name='Net_Income_from_patients' ordinal='25' />
                  <column datatype='real' name='Net_Patient_Revenue' ordinal='26' />
                  <column datatype='real' name='Number_of_Beds' ordinal='27' />
                  <column datatype='real' name='Other_Assets' ordinal='28' />
                  <column datatype='real' name='Other_current_liabilities' ordinal='29' />
                  <column datatype='real' name='Overhead_Non_Salary_Costs' ordinal='30' />
                  <column datatype='real' name='SNF_Admissions_Other' ordinal='31' />
                  <column datatype='real' name='SNF_Admissions_Title_XIX' ordinal='32' />
                  <column datatype='real' name='SNF_Admissions_Title_XVIII' ordinal='33' />
                  <column datatype='real' name='SNF_Admissions_Total' ordinal='34' />
                  <column datatype='real' name='SNF_Average_Length_of_stay_Tot' ordinal='35' />
                  <column datatype='real' name='SNF_Average_Length_stay_XIX' ordinal='36' />
                  <column datatype='real' name='SNF_Average_Length_stay_XVIII' ordinal='37' />
                  <column datatype='real' name='SNF_Days_Other' ordinal='38' />
                  <column datatype='real' name='SNF_Days_Title_XIX' ordinal='39' />
                  <column datatype='real' name='SNF_Days_Title_XVIII' ordinal='40' />
                  <column datatype='real' name='SNF_Days_Total' ordinal='41' />
                  <column datatype='real' name='SNF_Discharges_Title_Other' ordinal='42' />
                  <column datatype='real' name='SNF_Discharges_Title_XIX' ordinal='43' />
                  <column datatype='real' name='SNF_Discharges_Title_XVIII' ordinal='44' />
                  <column datatype='real' name='SNF_Discharges_Total' ordinal='45' />
                  <column datatype='real' name='SNF_Number_of_beds' ordinal='46' />
                  <column datatype='real' name='SNF_bed_Days_Available' ordinal='47' />
                  <column datatype='real' name='Salaries_wages_and_fees_payable' ordinal='48' />
                  <column datatype='real' name='Total_Assets' ordinal='49' />
                  <column datatype='real' name='Total_Bed_Days_Available' ordinal='50' />
                  <column datatype='real' name='Total_Costs' ordinal='51' />
                  <column datatype='real' name='Total_Days_Other' ordinal='52' />
                  <column datatype='real' name='Total_Days_Title_XIX' ordinal='53' />
                  <column datatype='real' name='Total_Days_Title_XVIII' ordinal='54' />
                  <column datatype='real' name='Total_Days_Total' ordinal='55' />
                  <column datatype='real' name='Total_Discharges_Title_Other' ordinal='56' />
                  <column datatype='real' name='Total_Discharges_Title_XIX' ordinal='57' />
                  <column datatype='real' name='Total_Discharges_Title_XVIII' ordinal='58' />
                  <column datatype='real' name='Total_Discharges_Total' ordinal='59' />
                  <column datatype='real' name='Total_General_Inpatient_Revenue' ordinal='60' />
                  <column datatype='real' name='Total_Income' ordinal='61' />
                  <column datatype='real' name='Total_Liab_and_fund_balances' ordinal='62' />
                  <column datatype='real' name='Total_RUG_Days' ordinal='63' />
                  <column datatype='real' name='Total_Salaries_From_Worksheet_A' ordinal='64' />
                  <column datatype='real' name='Total_Salaries_adjusted' ordinal='65' />
                  <column datatype='real' name='Total_current_assets' ordinal='66' />
                  <column datatype='real' name='Total_current_liabilities' ordinal='67' />
                  <column datatype='real' name='Total_fixed_Assets' ordinal='68' />
                  <column datatype='real' name='Total_fund_balances' ordinal='69' />
                  <column datatype='real' name='Total_liabilities' ordinal='70' />
                  <column datatype='real' name='Total_other_Assets' ordinal='71' />
                  <column datatype='real' name='Wage_related_Costs_core' ordinal='72' />
                  <column datatype='real' name='Fixed_equipment' ordinal='73' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='74' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg. Net Income by State Over Time (Map)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Net Income' datatype='real' name='[Net_Income]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Net_Income]' derivation='Avg' name='[avg:Net_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17ukixd15my0ah10eocky1pllr9x].[Longitude (generated)]' field-type='quantitative' max='33963841.10460069' min='25310424.597790264' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17ukixd15my0ah10eocky1pllr9x].[Latitude (generated)]' field-type='quantitative' max='7076316.5351969739' min='2156169.60067647' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Net_Income:qk]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
              <geometry column='[federated.17ukixd15my0ah10eocky1pllr9x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17ukixd15my0ah10eocky1pllr9x].[Latitude (generated)]</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{52D9F326-0F6B-4510-9E2F-67170DE084DD}' />
    </worksheet>
    <worksheet name='Bed Size Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Number of Beds' datatype='real' name='[Number_of_Beds]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='string' name='[Zip_Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Zip_Code]' derivation='None' name='[none:Zip_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number_of_Beds]' derivation='Sum' name='[sum:Number_of_Beds:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:Zip_Code:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Zip_Code:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;32703&quot;' />
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;36748&quot;' />
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;48471&quot;' />
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;50112&quot;' />
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;60625&quot;' />
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;60630&quot;' />
                <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;83530&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Zip_Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17ukixd15my0ah10eocky1pllr9x].[Longitude (generated)]' field-type='quantitative' max='-5715809.7972881235' min='-14648468.077827267' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17ukixd15my0ah10eocky1pllr9x].[Latitude (generated)]' field-type='quantitative' max='7113112.7748472244' min='2034194.9599559251' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Number_of_Beds:qk]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:Zip_Code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17ukixd15my0ah10eocky1pllr9x].[Latitude (generated)]</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{169DAC5D-1716-48FA-9027-E06FBAFB908B}' />
    </worksheet>
    <worksheet name='COVID: Costs vs. Revenue (All States)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Cost per Resident Day' datatype='real' name='[Calculation_1542482887165329408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total_Costs] / [Total_Days_Total]' />
            </column>
            <column caption='Revenue per Resident Day' datatype='real' name='[Calculation_1542482887166238721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross_Revenue] / [Total_Days_Total]' />
            </column>
            <column caption='Gross Revenue' datatype='real' name='[Gross_Revenue]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Costs' datatype='real' name='[Total_Costs]' role='measure' type='quantitative' />
            <column caption='Total Days Total' datatype='real' name='[Total_Days_Total]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1542482887165329408]' derivation='Avg' name='[avg:Calculation_1542482887165329408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1542482887166238721]' derivation='Avg' name='[avg:Calculation_1542482887166238721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk] + [federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk])</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{70DF5348-5ED9-4E2A-8675-FDAF0A1CC163}' />
    </worksheet>
    <worksheet name='COVID: Costs vs. Revenue (Best Performing States Only)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Cost per Resident Day' datatype='real' name='[Calculation_1542482887165329408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total_Costs] / [Total_Days_Total]' />
            </column>
            <column caption='Revenue per Resident Day' datatype='real' name='[Calculation_1542482887166238721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross_Revenue] / [Total_Days_Total]' />
            </column>
            <column caption='Gross Revenue' datatype='real' name='[Gross_Revenue]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Costs' datatype='real' name='[Total_Costs]' role='measure' type='quantitative' />
            <column caption='Total Days Total' datatype='real' name='[Total_Days_Total]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1542482887165329408]' derivation='Avg' name='[avg:Calculation_1542482887165329408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1542482887166238721]' derivation='Avg' name='[avg:Calculation_1542482887166238721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[yr:Year:ok]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;FL&quot;' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2019' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2021' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;HI&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NV&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]'>
            <groupfilter from='2015' function='range' level='[yr:Year:ok]' to='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' value='114' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='2' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' z-order='3' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]' z-order='4' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='5' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-distribution-id='refline4' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887165329408:qk] + [federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk])</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{ECAB13A8-3D35-42F1-B1B3-1248CDB16626}' />
    </worksheet>
    <worksheet name='COVID: Inpatient PPS Amounts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Inpatient PPS Amount' datatype='real' name='[Inpatient_PPS_Amount]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Assets' datatype='real' name='[Total_Assets]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Inpatient_PPS_Amount]' derivation='Avg' name='[avg:Inpatient_PPS_Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Assets]' derivation='Avg' name='[avg:Total_Assets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year) 2)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[tyr:Year:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;IN&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2015-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2016-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2017-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2018-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2019-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2020-01-01 00:00:00#' />
                  <groupfilter function='member' level='[tyr:Year:ok]' member='#2021-01-01 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[yr:Year:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NV&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;TN&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2016' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;KY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NV&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2017' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[yr:Year:ok]' member='2019' />
                      <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
                    </groupfilter>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;FL&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2021' />
                    <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:State_Code:nk]' />
                  <hierarchy name='[yr:Year:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Year:ok]' />
              <groupfilter function='empty-level' member='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year) 2)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Inpatient_PPS_Amount:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Inpatient_PPS_Amount:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Assets:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Assets:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Inpatient_PPS_Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Assets:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17ukixd15my0ah10eocky1pllr9x].[avg:Inpatient_PPS_Amount:qk] + [federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Assets:qk])</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{04F4F1A2-4538-4030-BDAD-505CE2F116E0}' />
    </worksheet>
    <worksheet name='COVID: Net Profit Margin'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Net Profit Margin and Net Income Over Time
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Net Profit Margin' datatype='real' name='[Calculation_1829024414075887616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Net_Income] / [Gross_Revenue]' />
            </column>
            <column caption='Gross Revenue' datatype='real' name='[Gross_Revenue]' role='measure' type='quantitative' />
            <column caption='Net Income' datatype='real' name='[Net_Income]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1829024414075887616]' derivation='Median' name='[med:Calculation_1829024414075887616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net_Income]' derivation='Median' name='[med:Net_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[yr:Year:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;TN&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2016' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;KY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NV&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2017' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
                    <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[yr:Year:ok]' member='2019' />
                      <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
                    </groupfilter>
                    <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;FL&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:State_Code:nk]' />
                  <hierarchy name='[yr:Year:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Year:ok]' />
              <groupfilter function='empty-level' member='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]' z-order='2' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]' z-order='3' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]' z-order='4' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]' z-order='5' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-distribution-id='refline4' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17ukixd15my0ah10eocky1pllr9x].[med:Calculation_1829024414075887616:qk] + [federated.17ukixd15my0ah10eocky1pllr9x].[med:Net_Income:qk])</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{F8C4F05A-34F7-4525-A66A-89B1774973AF}' />
    </worksheet>
    <worksheet name='COVID: Operating Expense and Revenue Per Resident Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Operating Expense and Revenue Per Resident Day Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Revenue per Resident Day' datatype='real' name='[Calculation_1542482887166238721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Gross_Revenue] / [Total_Days_Total]' />
            </column>
            <column caption='Operating Exepnse Per Resident Day' datatype='real' name='[Calculation_1829024414087995393]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Less_Total_Operating_Expense] / [Total_Days_Total]' />
            </column>
            <column caption='Gross Revenue' datatype='real' name='[Gross_Revenue]' role='measure' type='quantitative' />
            <column caption='Less Total Operating Expense' datatype='real' name='[Less_Total_Operating_Expense]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Days Total' datatype='real' name='[Total_Days_Total]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1542482887166238721]' derivation='Avg' name='[avg:Calculation_1542482887166238721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1829024414087995393]' derivation='Avg' name='[avg:Calculation_1829024414087995393:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[yr:Year:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
                    <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2016' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;KY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2017' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;MD&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
                      <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
                    </groupfilter>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2019' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;FL&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2021' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;AK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;HI&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:State_Code:nk]' />
                  <hierarchy name='[yr:Year:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]' z-order='2' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='3' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]' z-order='4' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]' z-order='5' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-distribution-id='refline4' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1542482887166238721:qk] + [federated.17ukixd15my0ah10eocky1pllr9x].[avg:Calculation_1829024414087995393:qk])</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{E80C272B-3F7C-419D-9FCC-71D941417EA7}' />
    </worksheet>
    <worksheet name='COVID: Overhead Non-Salary Costs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Operating Expense and Overhead Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Less Total Operating Expense' datatype='real' name='[Less_Total_Operating_Expense]' role='measure' type='quantitative' />
            <column caption='Overhead Non Salary Costs' datatype='real' name='[Overhead_Non_Salary_Costs]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Less_Total_Operating_Expense]' derivation='Avg' name='[avg:Less_Total_Operating_Expense:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overhead_Non_Salary_Costs]' derivation='Avg' name='[avg:Overhead_Non_Salary_Costs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[yr:Year:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NV&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;TN&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2016' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;KY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NV&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2017' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DE&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;MD&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NJ&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;OK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[yr:Year:ok]' member='2019' />
                      <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
                    </groupfilter>
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;FL&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:Year:ok]' member='2021' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                      <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:State_Code:nk]' />
                  <hierarchy name='[yr:Year:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Year:ok]' />
              <groupfilter function='empty-level' member='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]' z-order='2' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]' z-order='3' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]' z-order='4' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]' z-order='5' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='none' paired-distribution-id='refline4' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17ukixd15my0ah10eocky1pllr9x].[avg:Less_Total_Operating_Expense:qk] + [federated.17ukixd15my0ah10eocky1pllr9x].[avg:Overhead_Non_Salary_Costs:qk])</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{790DB31A-8C27-4213-A6DF-478CA76ACBE0}' />
    </worksheet>
    <worksheet name='Net Income by State Over Time (Chart)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='Rank' datatype='integer' name='[Calculation_1163336140251291648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Net_Income]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Net Income' datatype='real' name='[Net_Income]' role='measure' type='quantitative' />
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Net_Income]' derivation='Sum' name='[sum:Net_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1163336140251291648]' derivation='User' name='[usr:Calculation_1163336140251291648:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.17ukixd15my0ah10eocky1pllr9x].[State_Code]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
              <text column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17ukixd15my0ah10eocky1pllr9x].[usr:Calculation_1163336140251291648:ok:2]</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Net_Income:qk]</cols>
        <pages>
          <column>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{7222C2A8-59BC-46F2-A223-4EA98ED7F677}' />
    </worksheet>
    <worksheet name='Total Resident Days'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consolidated_CostReport' name='federated.17ukixd15my0ah10eocky1pllr9x' />
          </datasources>
          <datasource-dependencies datasource='federated.17ukixd15my0ah10eocky1pllr9x'>
            <column caption='State Code' datatype='string' name='[State_Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Days Total' datatype='real' name='[Total_Days_Total]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column caption='Zip Code' datatype='string' name='[Zip_Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Total_Days_Total]' derivation='Avg' name='[avg:Total_Days_Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Code]' derivation='None' name='[none:State_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zip_Code]' derivation='None' name='[none:Zip_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year),YEAR(Year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:State_Code:nk]' />
                <groupfilter function='level-members' level='[tyr:Year:ok]' />
                <groupfilter function='level-members' level='[yr:Year:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;DC&quot;' />
                  <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;NY&quot;' />
                  <groupfilter function='member' level='[none:State_Code:nk]' member='&quot;PR&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2015-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2016-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2016' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2017-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2017' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2018-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2019-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2019' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2020-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[tyr:Year:ok]' member='#2021-01-01 00:00:00#' />
                    <groupfilter function='member' level='[yr:Year:ok]' member='2021' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (YEAR(Year),Zip Code)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[yr:Year:ok]' />
                <groupfilter function='level-members' level='[none:Zip_Code:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Zip_Code:nk]' member='&quot;79705&quot;' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2018' />
                </groupfilter>
                <order>
                  <hierarchy name='[yr:Year:ok]' />
                  <hierarchy name='[none:Zip_Code:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State_Code:nk]' />
              <groupfilter function='member' level='[none:State_Code:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (YEAR(Year),Zip Code)]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[Exclusions (State Code,YEAR(Year),YEAR(Year))]</column>
            <column>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' />
              <lod column='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' />
            </encodings>
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]' z-order='1' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline1' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-cell' show-lines='both' symmetric='false' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]' z-order='2' />
            <reference-line axis-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-cell' value-column='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Total_Days_Total:qk]</rows>
        <cols>[federated.17ukixd15my0ah10eocky1pllr9x].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{A97E21D1-9811-4A2C-A2B7-5817FD919D4B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Net Income by State Over Time (Chart)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A369CE9-8073-44AC-9C5B-D837E9C483EA}' />
    </window>
    <window class='worksheet' name='Avg. Net Income by State Over Time (Map)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Net_Income:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Net_Income:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[usr:Calculation_1163336140251291648:ok:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D454318-F509-4ED7-8578-A3E056E2C250}' />
    </window>
    <window class='worksheet' name='Bed Size Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17ukixd15my0ah10eocky1pllr9x].[sum:Number_of_Beds:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[avg:Net_Income:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Zip_Code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63312C1F-49B5-4B65-AEC0-FC259D7472FC}' />
    </window>
    <window class='worksheet' name='COVID: Costs vs. Revenue (Best Performing States Only)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[:Measure Names]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CC11F38-B1D8-40BE-8D8B-3C1303BFEE75}' />
    </window>
    <window class='worksheet' name='COVID: Costs vs. Revenue (All States)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[:Measure Names]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79A2F08E-A217-4551-9A5A-22D4FC521E04}' />
    </window>
    <window class='worksheet' name='COVID: Net Profit Margin'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[:Measure Names]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3F6DE5D-7437-4D20-8232-341D0D1E1835}' />
    </window>
    <window class='worksheet' name='COVID: Overhead Non-Salary Costs'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[:Measure Names]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DCE21E2-3E4D-4719-9F4C-D999AE9316CD}' />
    </window>
    <window class='worksheet' name='COVID: Inpatient PPS Amounts'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[:Measure Names]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Year:qk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A5115F4-1368-440D-9339-87AC8ADD99DD}' />
    </window>
    <window class='worksheet' name='COVID: Operating Expense and Revenue Per Resident Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{586FFFC4-763D-4727-8F20-A85B02AD86EB}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Resident Days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:State_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[none:Zip_Code:nk]</field>
            <field>[federated.17ukixd15my0ah10eocky1pllr9x].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F47A24A-FAB8-40F0-B35F-D66C36922774}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg. Net Income by State Over Time (Map)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bed Size Density' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='COVID: Costs vs. Revenue (All States)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='COVID: Costs vs. Revenue (Best Performing States Only)' width='192'>
      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
      kUoVdvQFKOU2mV5KoTsGwVgfI4OtSb/mG8CX+D08kb0rM7tDIXTi3+D37uz26HqNeheqpwea
      nOFaRZibFGf+M/aJOHrEPZ+HcrnMrVu36q47QvDTv7vN8eE+Lp2qD5AWDoe5dOlSS3UmEomG
      g1zW9FJ0/AwNDzeMStiMeXl9ePRgmHg0Qrns7OASKZiYmKRkmAyNnkBY1VrSud2GMq9UKrVk
      eFr0NUpGAM0uk8lkiMVirkcRMAwDTdMwTRNN76VipslkMoRCIQzDaGtobyV4AW//D3AI4LiQ
      8fL5FYbw9nwHvEOuZNisFasoDAzUGy46jmBorMTgQJSBgXpdzuv1ttyOnWyBBgYG+M5znt1t
      nTtugz6PfD5HPrNlDBcLB8jn87tSgrPZLH/5l3/JW2+9hWVZmKbJ+vo6ly9f5vr161y+fPmJ
      zCp7RQjBT37yE06fPk0qleIb3/gGH330EYZhMDQ0RCaTcT1TfKFQ4OHDh1QqFUZGRlhcXKRQ
      KDA8PMz09DS/8zu/s2chz2azDfOgCcdg+u5fcPzC76Po9Tt4Y2NjDTvyQWf7FHh5eZnLly9j
      miYPHjzgjTfe4NatW3zzm99sqdyW98oikS4ikebNXB89ekS5XMbn89Uc1yORCI7jkEgkGmYi
      3AvZbJZUKlU7iCuXt2aaS5cucf/+/ZaiDz+PGzduUCwWGRkZYWNjg2KxSDab5cqVK1QqFVfC
      s+/oEy1MEvowvr7hhgLgVoiSTz/9lP7+fmZnZ3n77be5c+cOmqaRSqU4e/asq0LmOA63b9/G
      sixOnTrF8vIyuq6TyWS4fv06xWKx5aTZHY9+/tprr3Hp0iXS6TRdXV1sbGwQi8WwbZvz58+7
      vlMSi8X44IMPKBaLLC4uUi6X6evrQ1VVvve97+2Y1WYvDA0NsbS0RCqVYnBwsJYGtlwuMzw8
      7Mpv9Pv9tTRIdRz7t3su/1lsn8hWq1WSySSVSqUWOKtYLD4zElwrKIrCyMgImUyG6elpzp49
      S7lcJhKJMDg4+MzwOM8tu9Ul0NPsdgn0NG6d6O0WwzCYnZ3t3Okz7f+NGxsb/P3f/z2JRIJC
      ocC7777LT3/6U86fP8/S0hLXrl1z9dwhl8tx8+ZNotEoGxsbXL16lampqVrGxkQi0dgu6gAi
      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
    </thumbnail>
    <thumbnail height='192' name='COVID: Inpatient PPS Amounts' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXDd53nf+/ltZ9+wAwRIAiRBggT3TaQkLpKlxLIt2YrtpNMkTTVtHecm
      mXt7O5PO7WSmk+s7SZo613bTpB23aer6uo5rJ7ZjW5KtfaVEUiQo7iQAYt+3sy+/7f5xsB1u
      OMB5oYMjno+Go7PhOS8Ofs95l+d5vo9k27ZNmTIPIJIkSXKxB1GmTDEpO0CZB5qiOsDk5GQx
      375MmeI6QHn7UabYlJdAawTb0jn1zrukkhHOnL9Cvt8N6fAwzz//MnHD4tRbb5E20pw+fR5r
      dYf7sUEt9gDKZJEkFS01wUsvvcK6HY9wo+Nd+uNOjrQ38va7Z2nZfQR5ZpApU+Whve0MdV7k
      fOcY/ngXN6erOIGMX47z4o9/TM3Ok9y6eJquKXj0QCun3nqb6s37cOlTRA2Jfbt2oshSsX/l
      NUF5BlgrSBL7HzlKd1+YvS0SP/rRWwxcPcPVW8NEIlP8/PX3+eCdt1nXsgkwefvsJU7srsDf
      spUjDz+CV4XtBw/RMxjnyEabv//ZOwxeuUDn4BCT4TgvvfwaZ957h9r1m8oX/yLKDrCGkF1+
      WlsaUOQgm1oqqFzXjB2bxtLcVIZ81KxroTroBmTqAio/e+0ilU43TocCgOJ009q8EdkRZEtT
      BRWNTajpGAlLpaYyRGX9RmorvcX9JdcYUjEDYRMTE1RXVxfr7cs84EiSJOXsAeLx+Ed6MpNO
      p4nFYh/Z+5Upczs5DiDLH+2KSJIkFEX5SN+zTJnF5DiA2+3+SN88Ho9/5O9ZpsxiypvgMg80
      ZQco80BTdoAyDzRlByjzQFN2gDIPNGUHKPNAU3aAMg80ZQco85FiWTbjM3EyulnsoQBlByjz
      EfPjd67zL//jz/n6D94jYxTfCcoOsIrYVprU6E9JjT2PbemCbWdIjf4MPXoZKJ3KunM3hokm
      Mly+NU4smSn2cMoFMatJZvoUid6/AkDWKnBUHBVo+z0SvX+J7Kwn0P4NZNUvzPZq8quP7UCR
      JQ61NRLyuoo9nLIDrCaS6gdJBiQk1SfUtqz6QVKQFC+3JfWuaXZtqmPXprpiD2Oecj3AKmLb
      NmaiCyQZxd2CJImrxMra7kZ2VCNrAaBc5bVc7qgHKCMWSZJQvVtW0fbmVbH9IFHeBJd5oCk7
      QJkHmoIdYGyoj1jaZHygm5t9I4BF780rDI6HsfQUVy5dJJzQiUaj2LbF1NSUgGGXKVUM06Jr
      cIpESuyx8EopaA+QiU1y49oVGnd6mBhNU6FM0GOniKtBEr1dGFMq/pp6Om/cxOdR8csZ7Kry
      uvVB5lsvXuBnp27Qur6KP3ruJC5HcbehK35327a41TtE84Z1pFNhvFWNNLmH+GBAp62tnslE
      mIxp01RbTXx8kvj0MH1pN09sdmNZFpZlYZommUzxgyFlPjr6RmcwLZuxqRjReBIZZ1HHs+Jj
      UNsyufrhWUaHB9GadqHMjCFJsHlbCzd7RjBNmy11bgan00iaH5/Tpj6oMZR009Zch8TH/xi0
      zJ30jYZ5/r2b7N/awKG2dUKPhpeLJElSwXEA08hgSRpmKkrG1gj4XMQiYWSHB7dDIRwO4/GH
      kGwTVVVJp9M4Xa6yA5QpOkIcoBDKDlCmmJRMhxjb0slMvUVm+j1su/gZhGVWjmXZTEWS6Gsg
      ExTWaC7Q+++/TyQSmb9vJvtIjf4EJAl3wxeRHTXzz1VXV7Nv375iDLPMCvjpqRv84PUr7N1S
      z+9//jCaWlxhtDU5A2iahsPhyPknSzA4rtzxuKquSR8ucw9OXx0kHE/T0TVCNFH8E8A1efXs
      378/575tGcTGN9NxZZhHTz5LiazcSpZL3WP88K1rPLSjkScObkIWeFLzhRM7sIGHtjcS8olN
      h7Ztm2TawKkpKEp+18iadIDbkWQVLbgfxXluFS5+GzM1ks3YdNZSzqqE775yiUu3xugamuKw
      4At1b2s9e1vrhdlbzKvnbvHdVy6xf2sDX3r6AGoeTlASX6W2paPPvI+ZHBC+CdYjF4lc/j0i
      l34PI94l1HapsmdLHT63g+0ba/C4tGIPJ2/euNDL+EyCU5cHCMdSef1MScwAmelTxLr+jOSQ
      hhHdhhbYI8y2mRrCNhMAWOkRWKX0ZfHY833ERAeTPn9iOyf2bKTC78ZR5E3qcvjUQ61MRZI8
      tKMp71mrJByA+T+whOglirPqOFZmLNujK3RYqO3VxEyPE+/+Kqp/J+7GX0eSxF2oiixTVym2
      gu2jwLLt7D8r/xaBJeEAjtBRfFv+L9zpEVR/u1DbkuLB0/RPhNr8KNAj5zGiFzFTg7jqnkHS
      QsUeUtF54f1OBsejvBy/xaePbqU66FnyZ0rCAbKb4IMornNCv+lKGc2/G8W7Dc3fLrzeuFSx
      rOya0LbtvDsdlYQDrC42lhEDZGTVQ6mcAimuegLb/wwkVfjJ2NlrQ3z/9SscbW/imUe2IZdI
      V8n9Wxu4NTzN9uYaAt78skwfeAcwEj3EOv8YSVLwtf5bFFdDsYeUJxKS7FgVy3//5lWu9U0w
      MhXjxN5mKvzFly/Jh2ePtfHIrvVU+Fw4tfwu7bIDRK9gpQayt+M3SsgBVo+j7U0MTUTZv60B
      n7t0jkFlWaJ+mZv3B94BHBVH0CPns6dAwXJOEcCnj27l2J6NeF1a0XN1VpsH3gFkRxX+1j8s
      9jDWFLIsCU9TWKs88A6wuthYRhyQSmqD/SBREqkQpYqR6CNy5f8kevVfYaaGiz2cMnehPAMI
      5Jvf/Cb9/f3z9y0jgpmcJJaUCFb+e+RF5/WbNm3iueeeK8Ywyyxi5Q5g29y6/iEDY2Eat+xk
      rPMMllbF7t2tdHzQgeytpn29j44r3VSv34ZX0Wms8dI5mmH7pnUCf4W1w5e+9KWc+1ZmkkjX
      NzhzxeQTz/wBshYs0sjK3IuVO4AkUd/YRDiuoyoWyaRJ08ZGkuMTtO47zFRvF2MTEQ4+epye
      q9eZSYcZGNI4cvQglmVhz+ZsGIaR19sZhoFpmnm/fi1g6QksI4xlgKknsCRvsYf0sca0LIYm
      41QH3bjz1BsqaAaQVDdNDdWMRKLsOXSUcP9VhpQaKvw6umXhVEDXdSwbHB4/QSlJPG0QcCpI
      koQkSchyftsQRVGQZTnv168FjNhFzNgNzISKmbiCw/VYsYeUF7YN0UQar0vLu7Dko8ayLMbG
      xnIee/F0Jy+838WWxgq+/NmDaIvGHgwGcbvdd9gpYA9gM9Rzg+HpJC1bWhm4dZOE5WHvniau
      dHSghRppqHfTcf4D1m1ux2mnqKsJ0d0/SqC5MZvXuQwHWK7DrAVU/w5QXEiKA823vWTG/tN3
      b/CDN65wYNs6fuezB/MqLPmoSSQS/PCHP8x57PKtMeyxMfpmAvzQ7EdTF8Z98uRJ2tvvTKQs
      YAkks2n7XjbN3l1XuyBvsv/wQieUow/X5PzY5ubGFb9lqWHGb4KZwjYNjHgniqs09j7vXupn
      Opri7LUhok9m1mQqhM/n43d/93dzHusemuYv/ub7fPqXHuMTB7fkVSex9lz7Y4Tsqs92cFG8
      KM7VKQNcDZ493sbW9VV87tFtBPNMKlsLXOgcYXQqzumrQ+hGfjUB5WPQVUTz7yTQ/g088Uuo
      vlahtm0rTXr85yjuFrTATkQG2Q61NXKorfRm6o7OUZIZnWt9E0STGaq0O9f8t1N2gFVFQnbW
      ISldFHqBvvzyy4yPj8/ft9KjZKZeR1JDOKs/AYua/Rw9epTm5uaC3q8U+bXH20mMdfLY8fa8
      l21lBygRNm/eTEPDQqZqZuptUj4DSYnj3bQFWQ3MPxcKPZjVYTuaa3jmkW0cObQ5bymXsgOU
      CC0tLTn3jbiTyNUXUH2t+LceRJJLJ215LVHeBJcoVnoMLB0rM45tpYXatm2bjG7OlxiWiu2V
      UHaAUkXWQJKQZE14SeRr53v4/W+8wLde7MA081dYyIfXO3r5/W+8wN+80IEh2PZKKC+BShQt
      uB//tj+e3WQvfdpxL6ampvja176W89jAeIRoLM5LV5zcfCeEsiiA9+yzz94hXXkvZmZm+PM/
      //OcxwbHI0RiCV6+4qDr3Vzbn/vc5zhw4MCKf5eVUHYAbMzkIEgKiqueUsnZlyQFLbC7YDuV
      lZV85StfyXns9Y4evv29H3PixAl+/cndK06HCIVCd9h+80Iv3/reP3Ds0Uf4zV/eW/RUiwfO
      AQYHB0mlFmTzzGQPiZ6/BEnG2/IvkRcFrDweT87Jy3KZ62tgJgaxbYNS6Ut+Ys9GzKldPHZy
      t/D0jWO7N2BO7+LYoyt3LJGUxl9EIOfOnWNiYmL+vpkaJj1tMz5js37gXWTHQkpHY2NjQQ6g
      z7xPvPvPSY5o6OE2HKFDBY39o0KSJOTZ3CvRdA5O8dKZbghs4OS+lqL2CIMH0AGefvrpnPu2
      mSQ68EM+uDzDyU/+c7FSI5IGSNn/pPIxJcC3f/EhV3vHGXrxAntbG6jwr3z/IoLiz0F5YGWm
      iN/6OumJV2drbMUhKW5cDV9AC+wWrrOjhQ7i3/Z/42r8dVQB6/WPA20bqnFoCi0NoTWhPF0S
      M0Bm+h0yk2+gz6jokXM4K48Ve0h5IUkKqn83ijMm/KjSNlOkRn+E4tmCI3SAUtm8/9rj7XjT
      Qzz5+MN5i1etJiUxA6i+bcjOemRnPaqn3GkeIDP9LsmBb5Ho+Q9YRrTYw8kbRZYJ+Vw4i9wh
      fo61MYolUL2tBLb/O9zpq2XltllkZy3IrmwcQFodicRSw56VR19O59+ScACQkNTAbL5LaUz1
      q43mbye48y+RtRCSsvYKVorB2xf7+B8//5DOiIffemr/x6dFUpm7IaG41iEpS2vgPyi8dLab
      qUiCNzp6826RVHaAMh8bnjiwiUq/m+N7NhBc9RZJs7pA/aPT1Le0MnXrGnHTyeGDbXxw7hK4
      Quxa7+PDG/2E6jfhU3Waqj3cmoYdH1NdoDLF5djuDVgzezh6dE/ehfwF6QLV1tUxNB7FK8fQ
      1x9gt2uIC51TtB98iMmeLqbCKR46fpyeK9eJRsZ5b9TL8UeyukCWZWGaJplMfs2SdV3HMIy8
      X78cVtP2nJbRatheTfTZMa9GpNY0TXRdxzTFdvwEwLYwDYN8P+2CZgDZFWRf+yZuDI5gEyas
      p6jwh4jEU6QMg6BTJpFIkrHAW9FAIBNjKpahxu9AlmUUJdv5PR8sy0JV1bxfv1xWy7ZhGKs6
      7tXg9Y4evvfqFYbNGn6jgGS4e6EoCpqmoSjipdfnbGtafkG2gn6z8YEuOm4M0LRxOxWOGUbN
      EFs3ryc13ImnooHGjRvpuXqJ+g0bqaqsYvOOXaQikyy3FMLSp4n3/AXpydexTLGR4DJ38ovT
      XUxFk7x67haRRGnNXMuloCXQhtadbJgVO6he1Lu3fe9C0tfBw0dmb2VlAdc3Lv8cPzP1DpmJ
      V9GnVYzwcRyVj6542GWW5omDmxjpvsSxvc34PaUzc62EkogDyM66bK9gSc7eFoqNbUSxLR2w
      KccZ4MTejUSHt/HJJ3atSVU4kZTEb2elR7KClbaFmR4RatuIdxO5+gckh76LmRoSartU+ck7
      N/j+a1f4qx+dQTdWYaO6SuiGydBElGginXc0uCQcQPXvRHFvQHGvR/VuFWrbiF/DSg9hpYcx
      4p1CbZcqp68NEk9l6OgcJZ7Uiz2cvPnrn53nb1+9xB/99zdIpvNTES8NB/A042/7E1zr/hGK
      s1aobUfoIRRPC6pnC1pgr1DbpcoXT+5gQ22QL57cnne/3bXAdDQb/Y0lM2TynLmWdICuS1dI
      2RbXL12lWMr8tpkiPf5zjNhVbEvsKIx4J2ayDyPZg5nsFWq7VNnX2sDnjrXx6aNbS6ZJNsBz
      n9rL0fb1/N6zh/PWNL3vJni85zL/8zvfoa5tK3Xr2mjdKWScyyY99SbJwW+THlXRw3txVDwk
      zLZtpef3F7ZVSkd+2Q73kuwqi2LNUl/p42h7Ezs31eYdwLvvDFDT3M6vff6X8bvcuDSVYqm4
      yFoVSCqS7EB2VAi17ag4irflf89WhQVLZwlkJLMN+OI9fzF7glVmJSx5DBqeTvL4089S5ZAp
      VstkR+gAgR1fw2PeQvWKVVmWZAeOqpOontMlo9oAYMauYaUG0M0EthlHkh9MPdBCWXIPEKhw
      8ebzP+WNUxcp3oGYhOJqnE39LZ016Wqi+naA7Eb1tiKp/mIPp2RZ0gE0pweHKjM9M12+9NYQ
      RuwaWEmM+E1sI1bs4ZQsSzpA9bqN7N69CzmVKNoewMqME+v6U9LjPy+p+lfbMtBn3sdMDWLb
      YudPxbMJSQuh+toKkkb8OGFZNom0vqzg3ZIOkEkl6O3tY9fRw0XLm8hMv4c+/T56+Bx6pKNI
      o1g+evg0sc4/Jjn0PeHjzoriakiyixIJ56w6L77fyf/3iw/5Tz8+m7cTLPnJ9V7pYDKe5P13
      zhZtD6D621HcTSiuJuGR4NVFWnRL7ALSiF3FyoyjRzqwzfISCOC9qwPEkhkudI4SiecnGb/k
      l7qiqii6jKrJRdsDqJ4W/G1/iit1WXgkeDXRQofwtf4h7kgv6qJsWTG2D6NVHkPz7UBa1B3m
      QeZXjm1nZvAGJx7dlrfi3JIOsO3gwxhXOqlo2FjUTbBtxKHEzrslSUULHkJx6UiS2ENkWavA
      v+XfCLU5x+B4hFOXB6hcP8ruzXVF1+/Ml72t9Xzx5A6OHNmWdwR7ySXQB6++xLRuEYvFl13I
      Igo98iGRq/+KRP9fYyRuFWkUDw7/6cdnOXNtkK9//z1m8lRXyJdwLMW13gkGxiLL0u9ZLZZ0
      AIdTZnxsnJlw8SqxzNQAthHDNqLZ1Ogyq0pGz+72DNNC9DX61z87z4unO/l3332HeKr4M/qS
      DmCZEjV1dVRWFC/Y4qh4OJux6duGFtgn1LZtZchMvoqR6BaeaFeq/M7nDrKzpZbfffaQ8C7x
      xf/Oz2VJB9hx5BhNIQ/JuyyBLFMnkUhgWjbpVIJ4PIFl26RTSTK6gW1bJBMJDMvGNE1s28Yw
      ln+R6eHzmMlejPhNjNjVZf/8/chMv0v81l+QGv67kjpiXU1aGip4fH8LD+1oEr7+P7Z7Ax6X
      xpEdTXjXtjq0xbVz7/HhjV46O67w0D/+rdu8xWbgVifjUzO4a5qZ7rmAr2o9LU1VXLh6C1N2
      sH2dl66hGZz+GnwOi4agg6GUm7aNyzzJsU2wrWzGpuCAUlYS3QZs4fLoZe7kp+/eIJHSeeVc
      N08/kv9pzWpxHwewmZmaQLdkQoFKGtbV3HEK1NS8BYtuPBVuRq/pZCyJWDjB9r37mOzpJhI3
      2fvQIXqv3CA+PcaZUQ+PPXpo2bpAhr6w/zAyMRCosWNkosw5gJGJYAvW7ylVXaA57R7RVAez
      F7zf7UCVEfq52EAskSaZyr8k8j4OoHDkiWd4yDIZ6b/FyNAIVnUwJyN0oKebYEMzFU4T5egn
      SA9+yGTKgWM6SiyVosqrEA3HSOoW3ooGakgyPJ2ksdK9LF0gObgLSXEhKU6cwXYUgRo7lr1w
      yiGTFq7fU4q6QLCgryN6CTQ2kwAgmsigm+D3ivtcXni/k+++cplrYTe/9ytH0NSlj57vuweY
      mhjHtEwmJycIVtfmpkPbNno6wZWOs3SPJggP3WBcqWNn2yaU8CDVTS2s39TK8K2btGzdSl1t
      HU2tu1GN6LI3Qkb8OraZwjbjmIlSqtu1sfWZ2UKbtbb9Kw4P7WjE63awd0u9cMmVU5f7iSbT
      nL8xIiISrHPm3bPs2lHP9ZEUas97rP+Vp5jftkgym9v3Md+uonGhudyW9oXCkr37D87eCgJQ
      V7v0+v+NN95gZmZm/r6VHkGP7yKdkfjZK9eRtfH55+rq6jhy5MjdzOTFQoq1JFxp2Yh3Ebn+
      FZKDMkayFdW9UZht27Yw4zeQHbWzRUKlEaz61JFWCLfzxGMH8/qGXg6OWXuKLOX0H74f93EA
      lZoKiV+8e5WnPvdZrpz94CNLudq2bVvO+tNMDWLGs8Jaqm8HsrNm/jmXq7BjOkflMdxNUzjD
      02hBsU2ajdhVrPQYVkbFjN0Q6gBG5DzRG/8Wxd1MYPu/L5mM0Dc6evnhm9cYMSp57lP5afjn
      S2hWEdrrcqCqAsRxN2xspn/GIp02OH7ikaJVhMmOGmwjCshIgksiJcWFq/5ZtL7T4k+BFvcF
      E9wjzEjcAtvESg9jm7GScYAfv32d6WiSl8928/QjbdRX+oTZfu6pvajxAT715MN5H7He569i
      8P77Vzh0cCtn372wKkKm+SLJDlRfG6pvq/CyRdtMkhz6Lnr4vPCieMXVNK9op7gahdpeyC2S
      KJXlD0BrUyWQLWAXvQd468M+3r3Uz9+/eQ3DzK965b5Xk6RH+cUv3mRiLMw//FzjU798tCg1
      AbaZwohfB2RU3zah39TpqTdJDf0t6QkVfWafUN1RM9m/oGiX7Ef1tQmzrQb2I7saUX3bkdSg
      MLurzW8/c4Bqxvnkk4/hcYoNhL17uZ9oIs25G8NE4mmqgkvv6e67B1i/sZ7BawM8/MlneXhX
      s7iRLhNLn8TWs5tiWw8jLdoDFIrirEdSPEiKtgq6o4sQ/CWtejYQ2PG1kpNFuTU8Q0fnCDUb
      h3h8/yahtj/7yDam+q9z/GgroTxTOO57CtQ7mOKZp5/gtZcvsmNDNcGgryiTrayGsBQvSLLw
      AnAtsDurOJG6jurdItS24l6/aAm0XqhtkJBLsBj+Wy9e4HrfBEMvXmBf6zoqA+L2Lge2rSPx
      eDtHjmzP+xToPq9SaGoMcOb0hzjdBh9e7S5aTbCkelGD+1ADe4R3RLRtEzM1jGWEsW2xv6GZ
      GlpYApWQ8G4knubmwBTDk1HhKctzpYqmaWFaxbqiFrhvJHjvI4+xVqSiRBeUzKFPz9btDmoY
      0Va0Aiq3Ojo6iEYXivaN2BCJYZVbwwruDwZQPW/NPxcKhdi1a1cBI7cxU0PIWoXw+MV/+ek5
      3n7/Jhcn3fzpl5/A6xK352quD3HzMlQFPfg9YnVHDdNibDpOIqUTzLNDzH33tJlkjDd//hot
      h/fT/eENTnzyMUoroH8nAwMDpNMLUcLMzC1iIzYT0xZdXd1ogYVjOY/HQ0ND/g09amtrCQYX
      NqRmEsyaL7BlNyjezSiuheaAy41fDA4OkkotpG2YyT7iPf8RxdOMd8OXYNHpWG1tLX7/ypdH
      c/UAGcMsqB4gkUjwwgsv5NoeC3NgUxCVQX78ox/mxAEOHDhAc3Pzit/vWy9e4GcvX+TdPpv/
      5188gTuPTfZ9HSAZmaCzu4u428H6jdsona3WvQmHw8RiC0XktlGH4f0MzdthJhlCykzMPxcM
      BpflAIqioKoLH6nibcCwoyBJqJ56JFnNee1yx714djHTESztcTAUEuNjOSdjwWCwIAcQtexx
      OBwcPnw457GWmQSdg1PUVXhpaQjl5BpVVBQW4xkcz1aZTYQTJDNG4Q4QrGvm2JF2LvRPM+Gc
      wNzeXBotZe5DdXU1gcBCEbmZGsKMZy8WxRfIKbovNMosyU60QCHLnAWqqqpyLmozaWImoiAp
      aKEGJHlhOeF2F7axDM/m0STSenY2EBhjm4klMUyLmVgK07JRlZUdq6RSKV599dXcB6eHaPAa
      uMwh3nz1ZRzawpfMzp072bBhwx12lryek/EkbXsPUhcMFE19xrYymPGu7GmKZ3PON2mhZHV1
      7ry91sme/ctIig8ksXPzXIDK7dDQ8kwpyBfdyG58s+WWK59pVFW9Yw8VrN3AwHiEgMfJ9ubq
      nJOge80uS15J67dup3d0gilbor6+eqmXrwpWZhwrMwaArFUKjQPY1qKsQSu/DMI1gT3b08w2
      AAuR4lj/9Km9RIau82vPHMDnFrvr27SuAp/bQdDnFJ4Mt742QHXQg9OhiDgGzTLWd5kzV8YZ
      udVZvGNQxUc2kiQjqV6htmVHFSheJNWPpInNM7LNNHrkInrkovA0i6zj2lm7go9vnz91k67B
      Kf7Xa5dJ62Ir8OLJDBPhBOFY/kUr+TIVTXGtb4KBsfyPb/MoireZGbrBcEQv4hIo+8cGK/cb
      W4RtfQbMeLZTpBERatvSp7Bn/1n6tFDbzJeGWoiuNegfj2DZNmMzcdIZsUIBA+MR4imdwYno
      /GmTKIYmsraHJ6N5t0haokNMD4QaaG6KUr++ScQYV4R0n3uFG59za0l4xqasBbMRbCRkwept
      c3UMkuyCAmIkiUSC119/PecxZWaQBq+JSx/g9VdfztkH7N69m6amAq6FxRVmgv+U1UEv0USG
      Cr8LLc9Ttvs6QKihAdXvo6FxM6AULefQXrz4El0Ur1Wh+tsBSXhSmaR4UINZGRfRgTxJq0QN
      7MrmAhWQIetwOO7YTPpr1jM4ESXodbJ9Y36byXzZWBekfyxCVcA9X8AiioxuYtl2Nn6RZ8/n
      +37l6ekor/zkefrGRnn7zfeK1iRPkjTm034Fn3hgJjATPZiJntXZBFuZ7D/BSJI0GwUWXwdQ
      E/QQ8Dior/TlvZnMl5DPxa5Ntayr9guvN872B4Z4SheTDm0ZBnomybXLV9jUuve2F9uMD96i
      s2+UTdt3Exu8zrTpZV97M5c7OlBCjWyp89Bx8RqNW3bisFPUVPrpH42woXF5WZeSFkJ2NSJJ
      CpIqroACwDJmsM347O0wisBcI0ufwYhcAgnUwG7hyyDb0kFSkAQv3bqHZ5iJpUmkDQJep/Bv
      6tWiuT6EOhGhwp//7HJfB/BV1tOyPsCprhRe1y3sfbnS5J5gLXu2e+kd6yJt17DBPcm1mwME
      NrQRHuphKDNF6+69DHT14HDITI8MUb915/wO3bbte+7WFz9uZSaxUgMASFoQ1NA9X5sPOa+3
      7/3c/caXj+3sptqcPa2MYiv+e7522bbNOEb0CrLmR/Fu4/bpPl/bd/sdFyes2ZZd0GdS0N9m
      ua+Vcv53x/N3s73k4rGyoYXmRC8pXb7tWpGwMzH6JlO0rq/m+pAbrytK95hJjZmlri4AABfz
      SURBVNtBUlEwbHC6nKhSNq1iJqWyyaFi29a8NtDdlOIsy7rtQ19Y99uWyeIElXvZuBe325bU
      4OyGUkZS/LmOV6Bt5EU9zWS3UNuWHgUriZUxkd16ztJwTosoHwzDuOPCqK/00T8WoTLgQlXk
      nOeXY3tODXAxtg2pjI5TU+9QcC7U9q3haWZiaWaiKQJeR84scC/bSzqAx6Whm9CwacNtsigW
      Vy5eJKW4cXpaSQx1cNpyc/jgNj44+z6yt4r2Rh9n3nqTqsZWAl437XUBrnf20b51A+qsLpB2
      l6w9WZaRF609F2+CJeyc52RZvquNe3G7bWQfUnAfIN2xUb3X+PK1bc0XqkhIsiZ03JKzCsza
      rAPLjpz19HLGLUlS7ucBeJwaDk3B63Igy1KObVVVC7LdOxJmcCJC4C4b7ELH7XKoQBpVldEU
      Jef5e9le0gGG+kY49tTTfPDSKyT3bsEz51WSzOETT86/btOidf3xEyfnb59saMmxt3Nr1VJv
      eQeyVoGl+gEZSRPfDGK12qPaZoI51TnbTILAApZsnfR2YfYW0zcWJpbMkNYNqoOenJyaQpmJ
      JTEtm2gig2FaQjfZqcyCqrVhWSh5KE4s+YrKukree/kXpO0M124OFj7KFSApHtTAXtTA7pyk
      r7WO7KhBdjUiu5qQHZVCbdu2hZUZzzYOEczcCYpl2ViCo7U5ti2xtiv82SVbwOMUEwcAcLud
      ZDJpQnWb2b39zmy6j47SUT6YQ5JV4WWWc9j6FEb0yuyXwz6hCYLm7IVpreAQYCnm1v2ShPBj
      0IYqH5oqE/K68u4Qs+SnNtw3xsnPPEuls3id4m0zme2LK8lZFQSBqhC2bWKlRwEZ2Vkr/Ehx
      tZjLLbItHQRnaWmqTCoDiiznfSHli8/tJJbUcTpU4Zmm3UPTjEzF8Tg19mypy0t06z6vsEkn
      E0iqyfM/+FtefK14XSItfQrbiGR1NvWwWNuZCcz4Tcz4dWzR+TpkHUy0pDvMXfgsSMeXCMl0
      dty6YeYdrMqXaDL7pZDSDRFtUi2ufnCKnskUAZ8Xl2ANl+UgaxWguJEUr/BNcHYDPBdlFi26
      lcAId2BEOrBNsb225iPAsqOgXKC7MafX49TyTyvOl8XyhaLToV1a9u+XPWEsWBpRYe+jn1gT
      RfG2lQYzjS1J2JYudCMsaZWowb1kxXEFR5n18HwPX9FRZtlRg+RXkRS30PU/5O4BRBNJLFSb
      GaYlNMosz+4pZDn/rsx5fnI20xNTBKuripISbelhwJqNqEZAYDqEJAGzEVrR3UBlrQJT8c7m
      7YSW/oFlIEkSkuCTpTkSs8uUjJ5dpogUsJ33KdsWrhjfsi6Ez+Mg6M2/2GbJ38w0DXRdJxYt
      XpvU3I2p2KvUMhLo4TPo4bPClym2mQQzgW3EhdteTVobK6kKuNncWIFTYAwAIDVbX6DPntWL
      JBrPMDIVYyKcyHv2WnIGOPfyT+iMWYx032TXY1/giYOrc6x3P2RnXVYdWpKRHWLLMq3MWFa/
      hOyGWHGLU3Cz7UWNMWyx7YZsS8dMdCOpAWRnvdAjxYDXyQ5v4WWnhmHQcyu3r/Ng/yjRRBpV
      kalxpnFqC5egpmn4fCuf3YenoiTTBqNTcdZV+3Ns34slXyHJEKyoxqiZIjY2teLBLYeJ8XFi
      8dsCPKYzu0YJj+U8HAqFqKlZ+R8rpyhesOqc7KjGdjUCEpImdrliZSazPZP1qWxZpyTuaDiR
      0hmZilHhdxfWJtW27+gzZpl69jFbxtANFmeYWQXOCHUVPlIZg0q/O+8l0JIOEKqpY2ggyiee
      /lWqA2Lrce9FMpkkscgBLH0aI3oZkFADe5AX7QHcBUqXZIvKZ28K7hNsG7HZxt5SNsYgMhVC
      9YHszKZYCz696h6eZjqaYiKcYF9rvdDTmo11IRQ5WxAjOg5QE/JQFXQjS1LeM+KSn1zz9j0M
      DvyY73zvBf6P/+0fFTzIlWDrkflKMNuIFrQJHh0dJbZYYCrZi5noA0DxOlFcC99Yhc4uthG9
      bdziHEBWfWjB/atSDzC3dNBUZf5kRRQ+t4PGGj9ep0N4JBhY9niXdIDOi+egeie/fWJz0SLB
      IjutZNLpHIlBKyNjzN5XHRIyC88V2sIzuweYvW0J3gPMRrAl1YekhRB5OLC5sYK6Ci8el5b3
      eXq+dA9NMzwVw+vS2L05v2htvkyGk/SMzlAV8NBcH8zLwe7fJ3h8kL6RCTrOvsZ05jM8fXy/
      sMEuh5xIqi14mZJTb1zYGnRkeJhIZEFZwkz2Yyaym0DFK6O4FuyHQiFq82gYOMft9QNWehgj
      dhNJ1tBCB3L2AIXm78iSRMC7OkmHczIrhmkJjzP0j4dJpg2GJqPUV3oLlUY0eOP5f2Baq6ep
      ej1Hj+0v2gyQk64sOnV50brfLtC5DMPI2fQZmTTW7H0rk8FS9JzXLoehoSHCizpnZp2rOyuN
      GAwhKYukEV2ugk5TVpOWhhA2NvWVvjVRanmf+Ufjmd/8bT7/6ZO07lnPuddPF68oflHht2gp
      cBZ1V5EEF9znjltw8fpcQqCkCpdzmYokudA5wsCs2KxIRqfjzMRSDE1EhfcHqA56kCQIep15
      1zDcv0eYrOAPVnLo2BNCBrhS5tIJIHuyIrSwRHEx9z0gvPmGtbCfsGdjDcKYT4abk0ZcoRnL
      IhzOTTC83DVKOJ5mdFzBJeeeAvl8PrzelZ8GxpIZbDsbbTZNG5FbDEWWkaRsj+B8kyFKQ+x5
      /qxeypnqRWDrEeYuIMuIoAicYRStGksaAmlWglEoi/cuK/+WNk2TsdHRnMci05OMTcfxujQm
      xuWchLiqykooQBso5HMxE0vhczmEH4NORhJYlk04lkI3TZx55EiVhANkE78UstqggvU7czbY
      YtOWs6dAs6oQli44aXOxop3Y48R4Kju7pGdzgURmhE5HszNhLJUhY5h5RWvvhm3bTE/lBmaT
      8SjTUzHcTo1o2E1iUS2Dx+O5676oAAewGR/sZWAmw772rZx/73WSto+9+3Zw+fx5lGA929b5
      6Lh4nfpNO3CRoaHGT/dwjC0b8286AdnEL1t2kS1cX/mI74aserBmp0vR+wvLuC1+oQlUnivR
      PsG1Fd5stDaQf7T2bpimycTERM5jt3qHiad0ZAnqfOScAlVV3z2FpqAZIFTbyFS8GzDRbQdt
      27eRHBtmXdsepgduMTIUZ9fhI/Rd7yQp6YwNj9C2d++8toxt23cNf9+uPWNlJjBj17IDDuzK
      kTC8l417cbvt7M1c3RtRtmVH/ewSS0Jy1gq1PZcSnq2Oy5UusZZh+w4pF2Dui3Puy2bFtu9S
      UqnIErad/T+2nZNgac9K5eTD3fSJ5s795/6f83nfw3YBDiChadrsm0msq69l4EYHtruOuops
      BNEGZEVGksA0MiRSJrIsY9vWfR3gjl/WjLOwTo+jFOIAt983FqLClh5FWSS6ZbO8/JQ7/iCy
      A9W/856vX1buy222rdlx22YS29ZzJF2W85nc7ZRnbskjS3fZShZou280TMYwGZqIUVeRe1a/
      rHHf5XU59ca3v567f94FLYF6r1+ks2sAFI3w6DhJQ2H/zgY+/OAMaqCO7fVezr3zNnXN2/FL
      fnbtDHG1s4/tWzcgk9W6WdxTaw7ptlyOxTXAsuLMee5eNu7F7XkisuqfdS0JWcvVq5QlaXm2
      Z08h8kFapm3pNtuKoxorM4qsBpHk3M9EWcZnoijKHWOeS1M2rVmJ2RV+3oau32G7OuhhYDxK
      0OfE6VBzbd/WY+2+tg3jDttzaRASEtJtekb3GndBM8DGbbvZuG139u6mBf2fh48dn799/ESu
      lPaOrcs/wsypABNYEA8gORarQ4stWrFtezaNGyRFrBispHrRAvtWJRdoNWmsCaCpChV+l/By
      y7m4Qnbpld/PlMQpUE5TDDMtdNSrucG29WmM6CUgK44ria4Kk1enTnv+m1Qi7/P0fOkemmZ0
      Oo7HpbFHcC5QQ6WPjB7OiuOKCIQVi+GRESYX7fCtzCR6fJSMDt7KSmQ1Mf+caS7v6DIWj+cE
      fmwjghG/CYDqa0NSFoI8zgJTrbOpFXMFMcWKoy+fuS8CaRW+FBaEsQprknc3aiu8VAU9KLLA
      dOhi8Mwzz+TcTw7/HTNdr3KxW+XEp34VZ/UnVmx748aNOUloqdGfkOQCNwcU9myuw1l9YP65
      QiKecHspZ+ksU+Y0Nh2a+HTolobsLFhf6ROuCiFJ0rLbrq5JB7idnFSIRbdXQktLrlZpsuIa
      EefrRJMSO7a34azZUZD9HHK+4cR+281JI0qKB1lgagjA5nWV1Ia8eFwO4enQA+MRJiNJ0pls
      7wGRS6CVUBJfS87qJ1C8m1C8rTgqjom1XXUcLfQQWmAvWughobZzUq0Fq7fZ+hRm7BpG7Krw
      SrZYMsPQZJTpaFL4MmU6ms2Piqd04U3yTMtiKpIkref/eZTEDJD9JlWYU1oWieyoxrfl3+Cc
      Oo1cYKR2ZHSU8bGFmmUzPYqVzs5Y8nQvimMhIU5fZjr0nchkV+my8EBwz8gM4XiaSDxNyO8S
      mrbs0BTSuomiSMJlF7sGZzfYTpXdm+vyWmKVhANkZk7Nyheq6OFzOGueXPqHisDx48dz8vyT
      Q39LYvhNLnSqPHx8J676z80/t5wYwN2QtBCyez2yFhIu767MB5QKOwOybDunQAjA0lNkUikk
      TSERj5FJLSxC9AIr8CLx7GlhMmOgG9bHxwEWKzcgOGVZJH5/7lrcKx0kHH0ej1uluvEgWkBc
      Ip+tT2El+7EzE0iC1aEXV22Zls1KD1tVVWVLa2vOY+92X6Cz5xa+qvX88slNeF0L1gPBwmbg
      oM9JcsrA7dBK+xj0dhxVj+GKDuKIpHCEDgu1babHiN78OqkxG0tvz+qQCkIL7MFV/yyOyWTB
      zSxsO1erX49dR490ACB7W5GkRekhBb1T9hQontLRVKWgTarD4WDnztxUkF/VKvnafxnll04c
      4fCB3WKDgyzEL/KlJBxAVn24m/4pjrFzwhtk6DNnMCLnMaIqeuRDnFUnBNo+TWrk70iPa+iR
      wzhCh1Zs6+DBgzn3U6NpEr2nkNQQwV2PIa9Qd8i27TuK/3VdxzQNTCP7nLXICQqt4/3F6S4S
      KZ03LvTw9CPbCPrEzejTsewGO5HSSetmXs5bEg5gmynSY89jxGawrUNCI6BaYBeKpwXFLaP6
      2oTZhVklCNualTAXe1KjBnaC7EL1tRbU4FuW5TuWHpf6u5kZ7UP217FvR0tOgfxy+prdjVvD
      2brmiXCCaDKzYgcwTZO+/v6cx5KRGWKpDKosMzpsoS7aA9yru31JOEBm6i0S/f+V1KiKHtlV
      0Dfp7Sju9fjb/hRX9DyKM3+VhnxYzZJII3YNrBRGvAvbiK44zcLlcvHwww/nPPbd02GmwlHU
      4HoOHDxMbYU4QTSnI3tRqoo8v9leCW63+46A6b/+zy8zMX4TfA38+rHHaaxZkNL3eO5e61ES
      DiCpC3+AxakKgqwjya7ZdGKxx3JaYB+qfweq10YL7BZqW3GuI5vBuhrd4ldPBnnuSDXrACvf
      X8iyTGVl7rLP4wuAoqG5vFRVVVFZuXSAsCQCYZYenpXTtrENsR1izPQYsZt/RGrseSx9Zukf
      WAaKqw7/tj/BVfdZ4TXBZnoIsLH0aeGzy1yOvqPATfDdOL53Ix6XgwNb1xEqRHf0Lswt1ZwO
      Je9ToJJwAMVZh6S4smF/R+GqxYvRZ86gh89hRC+iRy4ItZ3Ng5ZnjyXEzi6Ks4HVmgEOta0D
      oHV9FUGf2EOH7RurqQq62bOlDk2wc/nc2VR5p6rmHbwrCQfQgvsI7Ph/8Wz4Eqp3s1jbgZ0o
      nmYU90bhm+DVJCu6uzozwIWurEpE99A00URhwanb+c5LF+kfDfOdly4yExPbM8HtzK7onQ5F
      XJfItYBtm5jpsWyjPNsWXFgSQHbUIzvsVdhf2NhWalFatMBZYDb6K0mKcGGstg3V3LyksGld
      xfxFJYqW+hAXyaYue1xi6xmee2ovWnyQp558OCfAdj9KYgbQp98jdvMrJAb+B0bsslDbmelT
      6DPvoYc/QA9/INS2mRwgevUPSA3/ADM1ItS2rFWApCKpQeGKdo/sWk9jTYBP7G8RLl8Ynk1X
      SKR0dENsguCpywO8d3mAn7xzI+8OlCXhAGayf/4s3UwOCLWtOOvJfjPLs7fFoUcvYSZuYSb7
      MWJXhdpW/Ttx1X8ez4Z/JlzR7r+/cIFbw9P8t+fPzze1E8XcRW+Y4gti3r7YRySR4sy1ofm8
      oKUowAFshntvcrrjMtgW50+9wetvnyGdjvDOm29w6vxVIuP9vPH661zpHqa3tw8jOcW17qFl
      v5Pi2TRbnyejelqW/oFlYMQ7mdUMwEh0CbWt+neA4kJSvAWnQtyOHj5Davj7xHv+CsuIL/0D
      y2Cuj1fGMDFNsRfp0fYmNFVh/9b6+U2rKNqbswckjdX+vANsBRXFN2xsJZq5AelRtOqdHHSP
      cOHqKFv2HWayt4vR8RkOPnqMnqvXmdGjDA4pHDpycL4c7nbJ73thpMdmj0Et9NQ4uAT2KdNq
      AQUkFVutWbZq8/3IzJwHM4VtGmTCHWiquBMsPTEEWFj6JIYeR0bcLDD/zWxnI64iP5P/9dpl
      dMPklQ9u8emjW6kTGGQ7dSm7OugammZ4MkJD5dIK2WJ2OLKCaWQLHJyahK4bmJaFU8nKV1g2
      qA43HjNFKmPic8yK0UoSch7BENXTjKQFkTQN1d2U18/ki7PyEXxbPbiT/TiD+4RuKBfLuUiy
      Q+i4HYGdZEZDqN6tKFoQSaDtbElktkOMpipCx922sZqhLpn1tUGCXpdQ2+qs1qgsS6iynN+1
      tfK3y+oC9fSOgHM3jnQPNxJ+Du5ZR8fZDrTQOhoaPHScPU3D5nacdpqGuhBdfcP4Wprm9Xny
      GaQjsJPA9q/i0W+geZsReZpim2nMeCdWegZJsoSmFS+uCZby/IPki+zfRmDnf0BW/ML3APON
      si0b8vwb5cu/+Mx+quwxPvnkcXwesTGGZx7ZxrcGrnP0QAs1Fb7VdoDbdIE2LGwgDx5ZyC15
      +NHc/JotLXdPSlrqvWRHNZLch+iAUmbqLZKD385mbIb34qh4eOkfyhPV24rsrEd2yqgesfEL
      kFAEBwXn2Le1nlvXNNpbavI+TswXTVWor/QJX/8DHNu9AWtmD0eP7sk7gl0ScYDVRHbUgOxE
      kjVkTWy6gurdRGDHV3FHzgvtP5xlThszfwmQfHn2WBvOeD+/9ORDwpUbVpNsbwBpWUoWD7wD
      aMG9BNq/jid9A9W3VbB1KXtOLzsQPXOZ6THi3V9F9bfjbvzNHG3QQlFkGZ/bsSZaGK02JREH
      WF0kFOe6WWn00pEZ1yMdGNFLpMdfyhH4LbM8HvgZoFTR/LtRfG1o/p1CG3A/aJQdoERRXPUE
      2v6s5MRx1xplByhZpFUTx32QKH91lHmgKTtAmQeasgOU+UgZHI/wzsV+OjpHhGeDroQScQAb
      24hlZUZWsWC7TJbpaJKrvRP0jYaFX6T/7fkOzlwb5K9+eCbvlOXVZE06gDXb0W/uXybWRfjq
      vyYx+D/RkyN3PF9GLP/1p+d46WwXf/bdd+Z7BouitsKDJEmEfK68C9fzxTBMhidjs93o83Pc
      NXkK9M1vfpOhoYW6AdsIYyanAXjzw6/mlC5u3bqV3/iN3yjg3Wbraq00wssWV9X26rG43ajo
      Ef+zT++nwhrjqSdP5nSIFMFfP9/Bi69c5J1eiz/57V/Kq+RyTTrAl7/85Zz7VmaCeO9/RpId
      eDb+TkENIWKxWE5bJTPZw8yNrzLdrTDd1oS8qCpMVdWCusQYsZtErn+F5KCMkdgitJjHMqIk
      +/8G1deGo/pJoflA//wz+3Em+vnspx8WXrerKjJ1q1APDDAZybbOiiWzXeg9ecj6rkkHuB3Z
      UY2/9Q+F2PrRj37E8PDw/H0rM4kRz2r4Xx36dk6PgObmZr74xS+u+L2M5C3szARWRsVM9gp1
      AH36PdLjL5CZOY0WeghJYBf601cH+eD6MK6aLp771L5ltx0qFs89tRcl2s+Tjx8i6M0v1bok
      HEAkty+XLCNCcuBbIKl4mn5rNidIDI6Kh3HW3sAxFkMTKOcI2TJR2VGL4tsmXBfo9fM9hOMp
      3r7YxxdOtlMhWMBqtWio8vPwzvXs2lSX94z4/wOta+nfnsmdVAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='COVID: Net Profit Margin' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXQk13nY+6ut98a+rzODZfadMxySIkWKFCVSkiVHtmRJVnQc2fFL4rz4
      0E4cnxzZPs9+9vMSOpKX2IkUx9YS2pEsWdEuUdzJGQ05Q86+AAMM9rUB9N5dy31/NJZuoAco
      ADWDAVG/c+Zgqgp166K7vnu/+91vkYQQAheXLYgkSZK80Z1wcdlIXAFw2dJsuABMTk5udBdc
      tjAbLgDuEsRlI1E3ugMu9snERnn9ygS7GzyM6qXs3laz0V3a9LgCsInwBCuY6H2BF/tlHnj0
      Pbz0o+9Q19LB5HAvKU8Vuxu8dA3E2Xv0KOU+ZaO7uynYcBXIxT6SrPHokWYmtBbMvtd49dok
      0YkuBkfGOfPqs3RduUAyWE+Z13357eLOAJuMUHk1TfUK5U311AZGUXxhMnqE+voGwuXV1DbU
      IEkb3cvNg7TRG2ETExNUVVVtZBdctiiSJEkFM8DMzMwd70QymdyQ57q4wCIVKBAI3PEOpNPp
      DXmuiwssEgBN0+54BxRF2ZDnurjAbbACpaZHeeXlVxiKxAHIJGc49/o5UgDC4vqbrzKWcPqp
      Li5rw3Er0I3+UY7de5QrV3poqNiNonop92tkAXNqhHg8hpSB6kBu7S2EwLIsp7vh4mILxwVA
      yAqa5kHGzD3A48OrKYDJ2dNnkGSdxOgoO8qqsSzLFQCXDcVxAWgs8/H88y/S1L6f8bFRvJLO
      W9euEUibHHnHu0iNXWMmXIEsy/P/VNXdjnDZGNx9AJctixsQ47LlcQXA5W2DEIJEOoth2l9T
      ugLg8rbh1Qv9/LvPfY/PfvUkWd20dY+7+nR52/DqhX7Gp5Mk0sNMRlPUV4ZWvMcVAJe3DU+c
      6GB0KsH+HbVUl9lzr3GtQC5bFtcK5LLlcQXAZUvjCoDLlsYVAJctjSsALlsaVwBctjSOC0B0
      pIfnnnuO7qEpAJLTY5x88RRxoL/rIi+/9CJdA246RJe7A8c3wvomEzz8yDu5eP4SNJQTKKth
      R900JtDUtodw2QiRlF4QC2AYhtPdcHGxheMCIAmBaRpYRSaXyHAfMQJsb6oGcvtvkiQhy64m
      5rIxOC4A2+oreO3Vn7B918H5gJiLvb340iaB7BTxjMCwoL2pGkmSXAFw2VBcVwiXLYvrCuGy
      5XEFwGVL4wqAy5bGFQCXLY0rAC5bGlcAXLY0rgC4bGlcAXDZ0rgC4LKlcQXA5W3DdDzN11+6
      wvnuUdv1p920KC53lNFInL/7wTlqy4N84t37UdboByaE4Bvf+EbBuTe7Rjl/Y5Sw38OT93Xg
      UReqZR44cIC2trYl7bgC4HJb+Yu/+Aui0ej88WgkQf94FEmCG6dqZlPn5zh+/DiPPvqo7bZb
      W1sLjgdiMnQN4Q2W0NrSiiev7XA4XLQNx53hxnqvcLFnmJrW3ezdUUdyeoyzp6+w/90PEbl8
      lt6RCC2772FHXSngOsO93UmlUgXqyH/9p9d56fQFJGHya596kiOd9fPXVFXF4/Gs+Vm6YfLN
      77/A0YN7aG2sRVqhXuySKpFOMJ60ePiRh7l44SJQR6Csho7WaQSQEF4eeughLl/twqoJY1kW
      pmmi67rT3XC5S1hc+6G1roKXFQ2PrNBUW7akPtx634Xm6hAhn2o7yMr5gBgzSyqdwBBLm7b0
      LOl0HEvyzRfHcIvkbS0+/PBeKv0mYZ/CtvpKx9tXVRVN02y/U44LQPuOVs6+eYn2vQfmA2Ku
      DA3hS5vsbKzl3IUb7Dt8yOnHumwSJEmivbGCdDq90V0BboMAeILl3HvieO4g7APgoYeb5q+f
      qKovdpuLy4bg7gO43FFSGZ2TlwboGZ62bau/nbhmUJc7yndPdfHlH57HIwv27N5JU3XJhvbH
      nQFc7igjkTgI0E2TiZnkRnfHFQCXO8uRznpCAQ/1lWF2NJRvdHdcFcjlznLv7kYCH3sABZOS
      gHeju+POAC53llTW4FLvOH1jM3fFItgVAJc7yndPXueZH1/gf3znTQbGoyvfsAp6hqf46guX
      +PGZHizLnnC5AuByR/F7NSRAVSS8mrMa+NdeuMzl3nG++vwlxqYTtu5x1wAud5T3HGvDT5Kg
      R7JdydEu+3fUcvasRltjBWUhn617XAFwuaPIskRbQzmZTGZFb83V8ujR7YwPdPDAsYMFbtbL
      9sfRHri4rED34BR//MxrPPPsBTK6s2nxn3n2Al974RJ/+JVXiKeytu5xBcDljvLKhX76R2c4
      e32EmyMzjrY9Hc852KUyOhndtHWP4ypQbLyPM5d6aNl5iO11paSi45x58zIVLR2EjQi9I1M0
      d+yntbbU6Ue7bALu29vE6bcuU13icfwd+Phj+7FiQxw7tI/KEr+texwXgJujUR588AEuXrwK
      daVMjo2x59j9DHddYUboNNTXkkkmEKJkvkKMadqTVpfNT1tDGU995ATZTAZVkRz97kuDHu7f
      28SO5gosy7J1z21RgZZaYEXupASyJJPV7elnLm9XNn4DbA7nK8TUlvLyy6+ybWeuQkxlTQ1n
      X3+Nypad+DKjDAwP07B9d0F1GEWxt2J32fxc65/ks39/iuoSD7+5ow2vx7lXMBJN8cqFAbJq
      KfcdLLdlZXJcAELVzbyzunn2KKfj3f9g9exxLa2dTj/RZTPx2sUBBsejDI+b3BydobPZubDI
      r/zoPM+f7eFMX5rO7Y1Ula68z+BagVzuKA/sb6altpQjnfW01jm7CC6fjUAM+DTb+wBujTCX
      O4oQgv7+ATKZNB0dHY62bVoW3/nhixw5uJeG2ipbaVHcGcDljpJb+92ethVZprG6hJDfY3uX
      2RUAly2NKwAuWxpXAFy2NK4AuLxtmI6lOHlxgKt9E7ajzVwB2LQIrOwkevRNhHDWq3Kz8pUf
      XeCHr3fzl994nUg0ZeseVwA2KcIyiXf9AbEr/4ls5OWN7s5dQSiQyyzt9ShoqhsP8DZHIEQW
      EGA561slhCCayBBLZhwPXE9nDU5fGeLmiPOZ4ebqAaiyjCzbM4O6EWGAsAyM+EVkXwOKpwq4
      TYZqB5FkldCOf4+R7MZTfr+jbd8YmuIP/9crqLLMZz71EPWVxYtLrIXvnuri777/Fh5FsHvX
      ThodzAw3MhkHIJrMkEzrhPwr1xpwZwAgNfQVYlf+I7HL/wFLdzZTwe1DQvE34618GElee1GJ
      YlwfiDAaSTA4EaN3ZNrRtiPRFAgwDItoMuNo20/c207Q7+Ed+1tsxxs7PgNM9F/jfNcgddv3
      sntbDbGJfs6c76akbhv1/hRX+yPs3HeYunJnA6LXg9Cncj/NJMJhdcLSp9GjZ1GDu1B8dWyG
      2eXE3iau9E2gqQoH2+ocbduf5/3pc9ATFOCHr98gkcry6oV+PvxoypYznOMCMBrTefiRd3Lx
      wiWghpnpGIfuf4iha5foGRjH7yvB59WwLOuuqRAjmCumoGBaYDnYn1TPn2NMv4Ic2EGg4/9D
      ku1lK9hIgl6Ff/Oho/PHTn4/+XHA6YzuaNthf+579HlUZCxbbd+GCjEG6Uwac7ZCjCQJMuk0
      hgWBUCltHR1cvnKZew7vR1EUFEVZUkbnTpOVZy0GkoyiyMgO9kciF5kkCYGqqkjy1l52pbM5
      ARBA1rAc/e4/8fhByuUZjhzYQ3lJ0NY9jn8bbdsaOfPGOdr25gJiqhuaOX/uHDXbd1Ohpbhw
      /iKtnfsLnJXsOS4JhKUDsuMvkb/xEyi+BpRgO4qnAifVlEDzL5CUwFf7IWTF52jbm4Ef/OAH
      pFILNvnU0BS7KjJICN489QK9FxdmxLa2Nvbt27fmZ1mWRVY30Y3ZQcfGe7Vp3KGN+BXiPX+K
      rFUR7vgMkuKcKpGdOkWy769Rw3sIbvu/HV1Uxrv/kOzk8yjBTkp2/aGj/d4MDA0NFcT9Dk3E
      6B6aQpYljnbWF6wDwuEwZWVla37W337vLb7x3R9TU9/MH/3bD1AaXD757m2pEukUTz/9NFNT
      U/PHQp8km5zAEhP4S38bpIWX9P777+eJJ55Y87Oyk89hZYbRjRmsho+j+BrW1fd8jEQ3AFZ6
      CGGlN4UAGKbFmWvDqIrMwfbaNRezLkZdZQhZlvB7VMcXwcl0TufPGiaGzWD7FXvQd/l1Tp6/
      QWXTTh65/+Ads5s+9dRTBcdGspvu039KWlRz4KHfdHSU9ta8FzPVi1pyANlT41i7AGpoF9l0
      P4q/BUmxl6rjTvPGG28wM7OQo2dgPMo3X74KEnzkkb0F1pTq6mr279+/5mdFZlL0DE+hqQoH
      dtQWFLNeL3MRYasRrhV/a7B/gsc+8CFKNGVDtVc10Eao/TchHnfc7q2VHKJ0/1852uYcwW3/
      Fm/NE6j+ViR54/PhF0OW5SJrMoGcmZlPXlB4be2MzyQxTIFhGswkMo7mB33j2jAAI7N7GJ1N
      K8cbLysApq7jD8D3vvGP1LTs5l0PHNxiS7j1I8kaWmj3RndjWQ4fPlxwbJgWLe37GOu/zoc/
      8DiygypQ0KcxMTvZBHzOqkBzccCyLKEp9vq87G+N3egho3mRJe6CYgYCMzMC1t1RX/btzPBk
      jK+/dIVXLwwQiTn7eZt5efvt5vC3y089sJPK0gAPHWyxXXxvWRGs39mJd8RPIFCFrHhIZ00C
      no3J4ZOZfJ749c+R0gNYbX+G7KnYkH7cTQjLQJhJZC2Mk+bVCz3j9AxPISemudY/aWtH1S4N
      lSGyhonPo9ry1bkVQgj6+voKztUG4KfvbaaltZKhwYGCaxUVFYTDS32aVpyDzp08RbitnXMv
      fZee0cd5/yN71tzp9WCmBsHKIgwDS49sOQGwLAvDyPf7FyT7v4A+fZrgjl9HDS5kWJAkCU3T
      ljZik7qK4LzuX1thb0NpOQ0h/5pHU+horJgPjM+/JoS4ZTvF1h6Dg4NLzpWXlxGLRolFC326
      PB7P2gSgrqmSM+cvU9ncRkXpxlkxfLUfwDs6g2WWoQbbNqwfG0VfXx9f/OIXF04IgZG4hjCT
      KP7PFwwIdXV1/NIv/dKanzUwHpt/GQfHY7Q1rDzYxGIx0uml6lIymSx4qaPJLDeGo3g0hc7G
      UtQ8XV0IUdR9oaysDI9n6WzR3NxccJzVTUYiccIBD+Xhwnc1FAoV7feKApDJqrzryQ9QFQ6g
      2PSxvh3IWim+ug9hxONspt1UISyEmUBSAkjS2tXHbdu28ZnPfCavXUF28nn0mdMEmv8Fsse5
      3Epy3mhr16/eLhPRNLppoZsW8bRO2QqbVauhZ3iKsekkqiJzuKPOlil0xd9QRILv/Z9v0tq+
      n3fet38TvXp3B5nRb5Ia/iqeigcItPzLdQlBPpIk4a16BG/VI460l8+Rzjp2tlQhxbPs3Va9
      8g2rwKMujPh2LTV2MWYX1bms4/YW2CsKQGlVFb6bUYSwl256KzM1NcXTTz9dcM5M9xGLpQgH
      X0IJDJI/e3384x9n9+67z0SqyDIeVQFVcXwGUGdNqpKE4xrFXHuSZH/mWlEAuq91YUoBslF7
      gRFCWGQyWTweL7Is5abqTAbV40GRZQw9i6R6UFb5t1vZCZIDf0fWqkCIDu7GpHbl5eX87u/+
      bsG5bOQVfvTdL/KuR9+Dt/aDd2W/F/PGtWHO3xhFToxzsWec+/c1r3yTTarL/CiKhEdVHHeF
      CPo0JiTwamrB2mI5lumBSc+Vy+ieMNmZLsaCR2w1ONh1if6JKIGKZg7ubGZq+AaXe0bxhKo4
      ureZkz/4OnX3fZz2VRpx0mPfRo+8TCYjYyYeQQ1tjjTTnooH8Ddk8dU5r6rcLvZtr2F7fTlS
      Iu1o9maAVMZgdCqJR1UI+TVHZ4GasiDRZJbq0oATAmBx7a03uBET7GjbR0vbDlv6f9SQOXHf
      fVy6eBFoJpnMsP/YfQxfv8hAXx/N23egw6oDYiyxYNYzhILY4CCa1XA3BP2shrpyP5/55+/g
      /Lk3KQ1otvterM6DLMsF1Vomo2lSWZNU1iSRNigNegruL9ZGsc9vrrpQPj3D00SiKaKJDCG/
      VjDD3Oo7WEYANN7z0U8RHe/ja1/7JnErwM4djSsKgaynicVnyJi5F1aWBLHoDMmMwXRkjMT0
      KJLRRHtF03xxDDs2a11asIGrsoW6Djv3ncbu33i3IIRgJpHFMMkF8djw/0mlUkXLHVmWVWAG
      1U0r7/9mwTXTNIu2UezzE0IscdGwxMIimNniK8u1AcsKQJZn/vy/cH7C4PixIzTU2zOzde7e
      ydk3r7LzwAHGx0apa23n0vmLtHTspTLsRY9PktKcnVbXiz7zJom+v0IL7yfQ8stbPmrr7PUR
      /t+/fQ41NUpr5z46bDiV9fb20t/fv+T8zPR0wUg9PpNiYia3X5AcKcGX51ng9fkIBJbuOh8/
      fpzq6pWtURUlfiajKQI+zQlvUJX3fPRTPDgbwubxhWypQLIW5Oix3HohVFMLwL7DC+sHLVTJ
      WsZCxb8NFB+SFlqXzVsIwW/91m8VnLMyI+jpCLLyAlpwAPLCJJ588knuu+++NT9vM3JjaArD
      tLB0k96RaVsCsG3bNurqlgbQv/XWW+jZhUQDpWWCsmgKj6pQHircA6itraW5pWVJG6Wl9gpp
      TMwkAUikdFIZnaBvZVeLZQRApry6FnVmhmBJmFg0bqsTtwtv5YMEWpLIZjmyVr7mdiRJWmKp
      SfR8ljd+8kNa6oM0n3gKxeOs7Xuz0VRTMp/H365TmV0UWaLE77G9SF0Nc6GQlhAFTnfLsew8
      MTV0gy9+6R9pO7yPeFzjZ376UTaqnF1m8gWSN/+alBHE6uhw1hdI0uZ/Su5WH4lUdtYVAuIp
      ZxfvE9E0N0ejKLLMntby3H7DCpimucgPqvgiuLY8QDqjE/Rr+D1qwfVibcAKAuAvreLE/fdT
      s62FivKqDc2iZaYGcs5wuvPOcP6mn8fXoxDccQTZ4+z6xIhfJTP+A7JTPrSyE+sOKJlDCEE2
      8iL69CkCLb+IrDn3eVSWBPBoCqpHoSLsbAhnLJnFEmCZFsm0gSe0sgDEYrEl54QQZLOFOZzK
      ghqiJkzQp2EaOvnL6VgstuT3YQUBmOgdxJATvPTcc1S37OXxdx7ZsPHRV/sBtP5ufFKz485w
      khJGDXag+Jpx2s8o2fffMWJXSd4cpCS8H0kt7pS1aqw0id7PgZlE9lQSaP60M+0CB9tr+aN/
      9W66r15kR8Pa1c1i5O/QOr3LPDSZYDiSxKsp7Gkpt6VmLfMbWfomppEyHp744Ad58NieDVUO
      jPhFjPhFslOvOJ6+MDP2LRI3/5LEjT9GmElH21ZDu0D2oATbHQ6JlJCUnKuypDgkVHMtSxL1
      FSECXs2xGWsOI88Matqs5m6XdDY35uumVfCc5VhGADTqa7y88cZpfvzss7x+vmtD63sbiesI
      I4GVGcPKjjradnbqJMJKYyS6MdPDjrbtb/x5vFXvnk234vBewFxdAOGsnp7K6Hz9pSuc6x5F
      N+xlV7CLmm+bdzDUEpiPMZCwH7u8jAoksX33Ed5v6bx89jqqz7ehM4A8Z5mRFEf1XQBhzlq4
      hI5wOOQy2fffyIw/S7yrl/DO/8e5gH5JRtbKMfVpJIf3VV45388zz15ATo5w5J4Rju9uXPGe
      W2X4kxcF1S8eRPOv3aoNc9GG2a1oqAwiIREOaAVep8ux4m5BT/cg737fk7z6/E+wDrZvmBXI
      TFzP/UcYGMkbeBz0f9fCe5G4geypRPE6mwzWTA+CsLCyIwhLd0wAJFkjsO1XyEZexlvprJ9R
      WdiXM4MizacaWYlgMEgwuDR6zOfzFbzkPq8GpJCAgN+H17vweQRDISoqlg5uU1NTttwxfJpC
      a20YWbI/A6woJtt3NHPq5VfZc889G/byA4VZmx3O4KyWHARJQwl2IqnO2r3n2pOUoGOxAJCr
      EJPq/xsyI98gO3PasXYBxqYS8xFhY9POrokaq8I015TQ1lixrpjgYkRiGd66MUHXcNT2PsCK
      AjA5NkxZXQtBben0dSfRyo6DJCMpIdTw2vNHFiM78RxCZDFmzmJlxx1tWxi5BbswEwjhpD5t
      YelTgDWf3t0p8vV+XXd2DaCpCtvqyqivdHbhDjA2k8K0BDPxzHwS3pVYVgVKRoa4PhSlvi1N
      wuFiBitx8uTJghhTI36ZsR6FrGkSfek1JHkh5rOpqYn29vY1P8tb/TiK9zqeykMLaw2HEFZq
      9mcWcPJlEvOL4FzSYOcIB7x5/3d2lAaIp7JoqoxXs+evE4lEiu4FDC0Kiu8fiRJN6sgy+PSy
      +TxBAKVlZUVVtGV6oPO9773I0Xt2cv6GxTvvW3khBCDMLP0DI9Q0NOLTFIRlMDw4REl1PR6R
      YWh0gtrGFvza8pNPc3Nzwc6dEU/T2vDhXKfDVQUpDItF+68GteQwgdZfwd+4zXFLjdBzWaCE
      mQQnX1RJQys7gT79E7R1zogvvPACExMT88eRaIp7a5NAmLdOPUfvhYV1QGNjIydOnFjzs0Yi
      ca4PRFAVmSOddbaEoNiuL+QC7vPxKRaRbJqgT8PQM5h5H3cgEMDyL03qsGxATCYa4dVTMfp6
      I/gCKu99+OiKOlPP1csIX4DL125yeO8Oxge6mEqpDF2+TmN1AEUWdHXfZP+u7cu2Iy12Z/WU
      gT6Zy+GvlSDlXVuvrdppW3c+Wtm9IP0wt9BWnau1lSuR1ISZvI60Dt8ogF27dhXsks7E01y6
      OQ5IHNhRQzBPV/cXeYlWQzSR0yQM0yKR0m0JQGVlJSUlhWszIQQjw4tM1oqH6ZSgNOQl4PcX
      fK+VVVXU1tYuaXuZp/v42P/1r1fs3GIysofdOzq4dOkiANmsoGVHG8PXL1FRXUdfbw9NjdtX
      DIiZuz6HpFWDOomkBhGSD7HIz2O9ASdzbTgduKKUP4rku4pS+SSGCQXD0joQZopk/9+AmSA1
      8k28DZ9ac1uLP+uAV6U06EORJbyassSnZjWf0eK2803/kkRh24ZRtO25uJF8hBBLBq7hSJJ4
      WieVNags8eHVCuMBigXbrCh+Qzf7qGlpZLhvhMbWxhVnAK+VpevGdbLCTyqZRPPI9HV3kcpK
      dF8+h7e8AUnKBTMsFxAjy3JhsERyGIwphDEF3lrkPJeC9QacWEYCkbiAbGhoWjVOukOkhv8n
      InWD7ODn8ZUdRFbtJZpaCSEbSJKKAGTFu66/f+67mGNwIs7kbKHpspCP2oq1f9aL226oLCES
      TRPwaZSFCk2kiqoWbXtuoMynWBKtoFclEstlnlBm49HnuFWwzbICMNr1Fn/9+b+neXcHpVUd
      fLh15XXA9p27GRgcpXlnI3oqQU1TG+bQMNu2byc9PcpMIrO23cU5NwJJWZeeLoTgueeeKzin
      T/+E3uunuHntecq3f7TAZaGjo2NJAqbVIHtqctFJnsp1BdpMTU1x9uzZ+WNhZUn26SA8aH3d
      eCp+PH8tHA5z7NixNT/LKIjaWp+7wmL9fWImQTprkNUNEuksAa9W8LvrITv7XplW7pmKvLLZ
      edlvpLb9IL/4Cyp6sIrSoNfWuCgpHppbci+Md3Zx2tCUOw7WNrL2Pcu8D2edH1RHR0fBsR7L
      0r6jCSQFrXQHkrIQlbSeiiUAwW2/gq+hnnDnT63LF8jv9xf0WwgTvfpnQRjI/mbUwI75a+sN
      vwzNFpuTgJCNoJLlUDUNLU8ABiYSnLvWj4RFZ2stpeHCmGDncCgtys3uN+mJVlMVVHj8A87H
      A5imSSKRWHJe1/WCkcMyZutMCRPDSCOJha5nMpmibfh8PlsfqiQps+Il4XTpZGGlEEYMy4ij
      KH5uT1Y7e20mk8kllhPIxfPmW9x8moTfqyJLEpoiyGQWTODFrDGQSz3o8y3dNV5sMRrUz/P6
      zTQyJvfedz/b653zNtVm3R8UWcKum9GKAlDf1MwbP3yTmvseuS3xAJZl3VIACqZEy0AmNw9Y
      hr7gCEZOAIrlsL/V+SV+4eacU5lA1zNgLtwTj8eL6o7hcNiWcCV7/5zM6GvEr5+jZPcfO1gi
      SUKSPQjTsD2z3MqcuDhwPRJNk8rkPpOZRKYgJmDxoja/bTvMtQvY3qyyS3K27axhYZgCO0Fn
      y+4DvPK979A1OoWemeLches8dv/+jXOHKMhMZ08vLRYBVOwlkKwsuZooFsLUgYUXyjCMooEU
      dr/weRcOoePsXrpYyNbn6A7zoqc4vP0/97mJ29D2WubWZYPi9+zfy3jqHK0d7+PggX0bGhFG
      QUY1h3syX3BPLgiIXy1CFKoLAIZcj2FK6FIVGd0CfWF3W9O0dei9MoqvHjMz6mhiXCis4O5z
      uB5EMjNr5hSCVMaeOTUcDhcdcBZnjPZ5PRDLoCoyfp+3ICAmHA5TXr5U3Vp2Bnju+88S04LE
      E1fIGArvfujwxrlEy2EEw7kXVHauYEOOuS/CYj3uCqlUih/96EcF58xkChF6gJfOKyjdP4A8
      h7jjx48XzaRgD4GVjYCZxDJis+sLZ8jk+f9kdZOgz7nd8UePbOfkmUvUlYXZYzPxbjEX6WJ5
      geasQIZlYQnWmxfIwz/7F79sq4PrIZFIcPXq1SXny8vLC0dHYxxJzwI6IjkK8oJemkqliq4j
      Ojs7baXUEFoTiJsIpQSktQuXx+NZUm8rO5UBKwPIaOX7C/T1W/UtkUgsGfGWbtKZWEYUCTCz
      U1hy4egWjy/N4tHX10dPT8+S86WlpQUvRzSWJjO7WJ6ZsRD6wkibyWSK+uXs37+fliIpTRbT
      PxYlo5uMzySJJjL4vc4J11xWCGGBadN8u+J833/1LKcv9lDR0MlDJ5xXg4LBYFGbdTQaLXwJ
      MlPIhienO3p9oC74jXs8nqJb9NeuXeP69etLzldWLjLGiiySAcg6Qin0rEwkEkULPxw6dGjJ
      My3LWrJeEOSqawpJJqsbBRs/0Wi0aNvFdkMNwyhcjAsTSVJB6FhChbxrQoii1p6qqqqiRckX
      L/TjRgxvJvdqeANBKvKqxKiqWtSpzK4/1vkbY5imRSxp0D00VbDJtl4W1hfC9ulpif0AABVD
      SURBVGprZQHoHeHBx5+gxKPeUfVncmICPW8RK2WGkYwIAMIbQqgLL0l5WVlRAejo6CiqO0YX
      lc+R0leRzDhISSxfXYGKVV9fX7Q6iSRJS17UYhYSaW6BKiyEaSLyNmcMw1iHH5IMSinCmATF
      XuKoWzEwMEA8b1QfGI8zPJUToPRUiHj5wudRXl5O2zo8bx+7ZzuXr3VTFlQ52L7UN2c9tNSW
      crFnnKpSv221bUUBCIdVnv/+d6lp6uTBe/fdMSFYksYik0A2ZnIzgC8BysIfWMz+DCypcQvF
      fUgkKZf/UiDnglYW1cVdX5lQaeGno053AswYEgJhxWA9gfGLBolwwMPIVBIkCPsX5eRc+1OA
      XKKthqowjZUB/B5nPW8nppNYQjAdz5A1TFuOdit+s/6gl9hUnFSRqfqOkmf3d9zsJ+YEzSp8
      jhPMLXodrwsgIdRKhORd9wywGCFmVQjhvKnyu6e6uHBjjB+e7ubGsLOBPIY1lxnOst3vlZ3h
      BkbRfAHSMzO3JSJMUZSiOqWmaYU7wbI8b6BRFAUpzzLg83qLtpFOp4tuYk2MF0Z9SelxJDOG
      QEL4x0FOzV+rrKrC611HOhM5BFYCZD/Y3EV5/fXXl6humqYtWjQLpGwErARCmyiYAQzD4MqV
      K0vabWxsLOrXtLhSfGo2vYgAUlmjICimmGcm2Hcp39VSRTjopdSvUFvujGPgHFl9wRfIblqU
      ZQUgPhmhdd8h5O5urNImWwtgIUTuk5sNTF78ReYuSfPagCzLtxSA/JfX1MKY+gQSEoonjKws
      dN1zCwHQdb2oAExNFY48UmoSyUrk1KtUBJQF3f5W1QXPnz+/ZAEry/KSoG4pOwNmFuQ4whMp
      mAl6e3uLbrIdPXp0idplGEahpUtYSKl+JKFieTTIy5Qhy/ISfyfIBYUU+3v8gUBBP1S1cK8i
      fwAIBgJLjQir4NiuBv7Dx+5HxiyIPHOChsowyYxOWciH37vu7NBgZLKkEjEyQqNUU+be62UZ
      uXGJq/1jVDR2cqCjkenRHt663EegspEKeYbBiSgNHYfpaFydD4ikhnMvj+xDkuw5aAUCgaKj
      92K7siXlX1MgT7gCgUBRC8fBgweXLHgty1piIpSSN5GEJ2eZ8JdAXlaIpqamdTiuCeZ3xB1W
      CfPz9agOZ2+7MTTFf//WGWpKvLS3t9sOi7RDVVmAqrLVmbGXebrBtatvcn1wAlXTyCr2vCKn
      shLvfPhhLl64CDSSiKc58sA7Gbp2kaQc4KEHD3Hp2nWs+tJ5s+Hil8ayLPr6+wssE2aqByMz
      hRASnpBckCFakmXq6+sXfnd21L/VAnbuxZ2btkVeSlyBNB9sI0kSWV1f4lJhmua8elWQ80aI
      JTNO/gec87lZuH4rFW1u1sxvO5lM0ptvwxcmaqYLCQtTSWBpC6O2z+djR1tbwew7Nxvnn5vz
      AdKz2QKLVjK9sJudSGcpyS5kiEul0/Pf19z9y33Oi69/8+VL9I3M0D9icOZKP7uby1d1fz5z
      s9at1K/8zzERjxfdv1jWFeL4I+8l/e1vcfCxd/HqsydtrQEkPUM8GUO3Zl1qJUEiHiOtCyQp
      QyI5jYl/PlDiVhW8f+7nfq7gODX4FXrOfZlkVuXQY7+25vygQgj6BwYKzpmpGMKIATJqcLhg
      k62xqalo/4oFWGSz2SVhenJqMLcRJilY/uqFTNTk4p5vZcFaTDabLZxxhIWuG0iYWFigFM5G
      xdq9lQqkeTwFM1G+jq8oSoEZ2O/zrSsGu7OlhhdPX8KnqWxvrKasbG3WKyHEEvN0OmswNBGj
      JOilqrRwJgiGQmurFN/WVsP//Ou/Yd+Jh22tATo62zh77hqd+2YrxDTv4OL5izS07yFEggtX
      Bzhw6ICNlgrRSg+D8nUUfz2Kz16A/q34xCc+UXCc6P4Dzr3VTWOtStPRX0b2LSwUi+0B3Ipi
      G1BSMoUk0ggUhEgWCIBRZPSH4n7xqqIUjnSSCmoZwoggqRUFJtZbLVTtmnOVPB8ap9MXvvfe
      dkJymoBHcnwRfHN0hrGpBKNTCUJ+jzOFsm/2Xqe0ug19fBSLvSvaMVRfCceO35M7COQ2Og4c
      nT0mwPF71pZ2JD32PTCTmJkb6LG38JTdu6Z2JElaUobHUDNomsCrmvi8EmqRMj1rZ25knrUp
      2lCpKyoqlkzrsiwXrGeEMNETM4BAJobqXdjh9fv9q1qoDvT3M5w3c00nMkxOxABBUESJTS4M
      ArphsP/A6gewORRZZkdDOel0et3JCBarppoiYVkmiiqBsAqu38p7d0UBqKyuJXLuIlX3Prih
      3qA5ledHgIziXz6jxGqR1Nz6RpI1JJuOdqFQaMmHmk6nlyxqLa0MkR1DUgKoHn+BFSgUCi3J
      dmAbIRYWv+vcu/jghz5UcPwPz13kte+fRU6M8OQ73sd7j6995/d2Elhk+autUnjjQhe72lsp
      KSlUd4o51MEKi+BTP/4xY4k0rW1NlAZ8tqxAtwtjLjcoFmayC8Vbs+zvrwZ/w0dQr0bw1R9B
      9jXYuqeYdUkIsUT1MGczw2GlkGWBlOcK4fF4bK8BliBJOTVI6Oty4S5GW0M5fq+Gampsr19f
      SOjtQpIk3vGOdxSc+4t//AkjaR/JEZlPfOTIknVAMZbNDu1RJdIZA4/XR2Nj7cZmh1YXvghJ
      c/ZLUYPt+Bs/gbd6m+OV3BfCLWWcHT7yZwBnzaB7tlVztLMeKQE7HAxZvN2UhnKDid+j4dHs
      bTouWySvY/8htP4BBvr6uHa9h20NlRsnBHkvpuSwMmYZUfTp0xgJE8qP4uSLKmnlCDORqwyz
      juS4mUyGwaGhhRPCJDs1BMJE8csoeeuWyiIZllfDy+f7efl8H3JyhIeu20uPfjewb3sN3/N7
      2Lu9uiDbxHIsWyf463/7BXqTEvV1tTSEmhzq5trwVj2KGr6EJ1iFEnC2RFJq4Eukx75DQn2R
      ypr/4miE1VyyXaHPzKora9v9rKur45Of/OT8sbAyzJx/CSszRKDl/fjqftqR/kJerK5wPm73
      dvLD17tJpLK8dnGAn3k0aSsB7zIC4OWTv/ofHeze+lD8LQS3/yoiHnc8f6eVyVlAhBnHMmLO
      hhjOzVyShPMrqAX/dyeZS1+4+P93O+840MLli+fZt7OBylJ7EXJbuyT6LFr5fUjyFdTgjnUV
      yLAsi+np6YJzZgIsPYuk+FDlOPkOuOtLwyjNF9uQZGcrOebH0qo2K63cDZzY04T0gaN0drbb
      Kr8KrgAA4K1+D766KQKt9yGtI7ZW0zT27N1bcC527aucu5Zkf5sg1P4Esrbg0bmurNbCnFev
      LIfrmj18qJU3rw1A3ODEno1VfVdD3+gM33zlKseSGh96uMzWPsOmEQBhJslMvoBphIFOHM3f
      OfS/SA09Q1z5MeUVf4q8xioxHo+HXbt2FZyLWk2Mjl+hc3sFJbv3FuQ0XReyByXQjhE7hxre
      40ybm5wvfPssl2+Oc33yPId3b2Nb3crWwk0zv6XHvk168Msk+7+AkepztG0zeRMAoU/P5/N3
      CmElZ39mnDVXCgMrOwaAmR5a4ZdXx8lLg1zqHefKzQne7BpxtO3bSVtjBbIsU10WpCxkTy3c
      NAIgKcH5zR+ndd6FRfX68gIVQxi57AzCSjtsr5fmM0w4l20uh5an92t20qvdJbz33jaaa0p4
      34kOSoP2rG2Oq0DC1Bkbj1BeVY1HlRGWweT4JMHySlSRZSIyQ0V1Ld5VLq681e8huCOAnPU5
      ugsM4G/4KFp4Bl/jUWSvs4Haangv8BKKv9W5KvFALuJIAyQkyVmr2IMHWugdmiQ96eHoTns7
      43cDzzx7kZsj0zzz4wsc37+D6rKVne0cF4Dea5dIoTIcSXJoz3YmBm8wOKWjD0dorPCSzOhM
      RjPs27ltlS3PftHrSDF+K2RfE1r5vXhKDzpeLcacNbFa2QjCyjhYJlUl1PbvMRLX8VS8Y+Ub
      VkHI7+EXnjjEmTNmQZ2tu53aiiCSJFEa8tnON+TY22RlEtwYHCNheTi4d/d8hZhMxqRt9x6G
      r1+isq6RVG8PdXW1K1aIWYw++QPi3f+VZNZHpvVzjhazywx/mWTfV4lZNYRCf+xoqVRJqwO6
      kLRyDFNGcrCqu5lNYmbjSNkskoOqykgkzp997RTEh+jYfcB2rWC7GIaBcYtqMOvhpx/oJKiP
      c2jfLrzq0rQ1xXBMACTVQ2VFOeZAL/2DN8lYPjKZDKoKw/39xDK52cFf2YjfI69YIWYxhhWf
      9YDUUaQs6jpz4OeTMSaB3EaYIhsoDrad1HOLSKFPoSoWsupM28LKkLj5n7HSAygy+Oo+6Ei7
      ABd6J7naN4GciNA1NM39+9ZeIKQYqqqi3qIazHpprC6lJBSw3bZzAqBolJeVURraxY2eAXbt
      3E46GaOmuZ1M703qdnWSmhxgcmoCTfMS9K/OJcBb8358DWmEUYIaaF1zP4UQ/N7v/V7BOSs9
      QHTGi88r4Xv+LwsWwo8//jj33ru22AMAX/UTSJ4v461+tKDwxrrJ2wcwM85aag6119LZXIkU
      z7K71dnEu7cTyxKMRuLUN+nYTRTjuEItqz7aO3L+4/7SnB22tS13XNK0nbUuMWU1iLfqMfR4
      nPXuAfzGb/xGwXFm8nlS/X+DEuwg1PbrBfk711u1xFP1KL7aJP6GJx2tFI/sQys9hj59Ek/5
      2suWFqOqNMDjx9oYHxCUOJy54Xbyv5+/xD98+ywNb03yB//6fbYq0W+ajTCnkCRpSZijVvdu
      gpVHkZQQkuLsF54e+ntSQ/9EoreL4LZfXVedsAKEiZUdzf3MjDrT5iynLg3yl18/jZwcYe/B
      oxxsc9YydrvoHopgWRbj00lm4mlbArB5jLy3EWmuiJ3DLz9AduokmEn0mTPzm2LOIM2mh5EK
      Uq04gW6YWEJgWcJ2luW7gchsZcuMbpBI21tgb7kZ4I4zH8fgcECMpKCVn8AyY6ihXSv//jJ8
      4QtfoLe3d/44lsyijc+AsPjy5z/L1/NMinv27OFjH/vYup53u7hnZwM3u67QWFtGnc2s064A
      3GZ8tR9A8nwJX81jud1spxBZMmPfxsqMkI28gr/+w2tu6tOf/nTB8Ugkzme/egpNlXnqI/fZ
      divYaB461Mprp8I8cmRbQTrH5XAF4DbjqXwXgSYJX8Mjzm6ySRpa2Qn0mdNo4X3OtQvUlgf5
      /V96l6Nt3gme+dEF+kan+YfnLnLiQLuttCubSADEbMG5zaOTwlzWsqVp2tffrkyg5dMI8+PO
      eZjOt72R0d9rZy4OWJFkVMXe37BpFsF6/Arxrt8nNfC3CDO18g13CWbqJtnIy+jRczhbJTJX
      10BWw2xcro67i7nwTdOy5sslrcRdOwM8/fTTBVmchT6JkYogiPC1534nr7Ij3H///TzxxBMb
      0MuVSdz8K/TpCyR6eijZ+2fIqlPrAIGZHsZM9qCVHXPMx2gz87MP72F6pId7Du2lxmbWubtW
      AJ566qmCYyN5g/i130H2NRHu/B1Hv3AhTIz4FRRvPbKnHCdHVNlbA3Nm1nXsAUQiEd544428
      M4LM6P/BTPfhrXk/in/b/JWSkpJ17V5vVlrryvhnD+2mrW0bsk017q4VgMUY8StY2QksI46l
      R9YVu7uY1OBXSA99BdlbR8nez645IqwYwdZfwddQT7jzp2xXdC/G0tSIFpYmIxvg8Wioeddu
      h4/N25VNIwBmogsQYKUwU/2OCoDQc6qWMFMIMw0OCoARO48+dZJspAJP1bvXvMAsKyvjoYce
      yjsjMDN7MFM30UoOO7fDvMVwfBFs6SnOv3WeRCa3IBFmlqsXzhOJ59JrjA/2EF9aFGVFvNXv
      QfFvRys9hhbe72SX8Tf+PP7GTxLc8WsoXufcrAFSg1/CTHaTHPwiwlxau3ftSCjeGjxlx9yX
      fxbLEoxOJWxXoIfbIADXr1yhvrmWq9duADByswtfZR2916+TSU7RfelNRtbwHqihTkr2fo5Q
      5287HgIoeyrwN34cT9kxnLaoaKXHQAnMjtLOVXN3WcpXX7jE5791ht//0svEU/ZGWceGDjM1
      zdnLvSgeH50V1YwOzwZsW1BRWUU6Mkr3jT6amhtImAaWJa8qIGaBvNJAjvW9n+zoPyAHd+Op
      esJRO7hc8QRq2QRa7c9gmAJMZ4NANiOZbBZddz4gZmA8imVZRKIpovEUXvUOpkVR/GXcc+QQ
      fdfOc+bMG6iBGqanp/D5NS69+QayN0iJrNN7sx/LbGFndf2qAmJuJ5m+r2JMvYAUfR1/xXEU
      X/3KNxVrJ5Ph8uXLhefGvsXNq6/zhtJFoOmfF+QH3b59+6LKj29/rvVP8tn/fZrqEg+/2d6B
      10YRC7v8/LsPYMwMcvzQPuqrSjYmL1Bz+x7KYgkC4TCWkUUrbcMXjuMNhNBUmY7d+7AcTm24
      XtTQHvTpUyj+bQWJq1aLYRh0d3cXnMtGJgn6BL0DcbyZ7gIBqKmpuSsFYCqW4gvfPoumKvzi
      +w4TtOFWfCv+5E/+hJmZhVQzk9EUY5EYYxL8dv8bBRkoHnjgAd773veu+Vk15UEeO7qDtrZ6
      27O4JG5VOuMOMTExQVXVxkYdCSGwMsPIWpmzUVvkcvZkIy+hlRxCDTmb0Ot28d1TXfzVP70O
      wG98/AFHQyK7BiP8+T/+hNryIE999D5Hq0QCnDlzhra2NlsDiyRJDifB2aRIkoRiszDGalF8
      DfgbPnpb2r5d7GqppKEyjKpItDU4Wx+graGcp//Ne3Ipnu4CnyNXAFyWsK2ujD/6V48hSxIB
      n7PqqiQtFEm/G3AFwGUJkiQ5XsX9bmXTeIO6uNwO3BlgE7NQCR02w+L6bsSdATYpQlikR75G
      7PKvY6YGNro7mxZXADYrQicz9m2M+CWy0z/Z6N5sWlwB2KxIGt6qx1GCnWil92x0bzYt7hpg
      kyJJMr6Gj+Kr/9mC4tsuq8MVgE2MJMkF9ZNdVo/76blsaRwXgGwiwqnXTjERSwNgZOKc/ckp
      BieipGOTnD51krGZtNOPdXFZE44LQNeNPvYf3svgbKq90YGbNHTuZXKgj2tdPew5fA+VITeD
      gcvdgeMBMZKq4fcFUKTZkEgh4Q8E8KgQmZrhrdMn8Vc0cnBn6xoDYlxcbs1c5Rm775TjATFj
      N6/w/PMvUNu6m/GxUcIlQc688iIlta20NtTRMzKFpmmrrhDj4mKHucozd7xCzBw1rbuoaS3M
      VvxwzUJFl8Y2p5/o4rJ2XCuQy5bGFQCXLY0rAC5bGlcAXLY0rgC4bGn+fynRH8K8AAbnAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='COVID: Operating Expense and Revenue Per Resident Day' width='192'>
      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
      aFUaNylWWo4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID: Overhead Non-Salary Costs' width='192'>
      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
      D/5/vGfqCazNfyAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Net Income by State Over Time (Chart)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Resident Days' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
